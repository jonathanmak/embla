# Makefile.in generated by automake 1.9.6 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# What the second for loop does: it copies libcoregrind.a and libvex.a
# into the correct (target-specific) lib dirs at install time.
# $(noinst_LIBRARIES) will look like this:
#    libcoregrind_x86_linux.a libreplacemalloc_toolpreload_x86_linux.a
#    libcoregrind_amd64_linux.a libreplacemalloc_toolpreload_amd64_linux.a
# The 'if expr' filters out all but the libcoregrind_ ones.
# pD and pU are the (arch,os) target pairs separated by a dash (pD) or
# an underscore (pU) respectively, eg amd64-linux (pD) and amd64_linux (pU).
# It then copies libcoregrind.a and libvex.a to the right places.


srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
DIST_COMMON = $(mcinclude_HEADERS) $(noinst_HEADERS) \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/Makefile.all.am $(top_srcdir)/Makefile.flags.am \
	$(top_srcdir)/Makefile.install.am \
	$(top_srcdir)/Makefile.tool-flags.am \
	$(top_srcdir)/Makefile.tool-inplace.am \
	$(top_srcdir)/Makefile.tool.am
noinst_PROGRAMS = $(am__EXEEXT_1) $(am__EXEEXT_2) $(am__EXEEXT_3)
@VG_X86_LINUX_TRUE@am__append_1 = memcheck-x86-linux vgpreload_memcheck-x86-linux.so
@VG_AMD64_LINUX_TRUE@am__append_2 = memcheck-amd64-linux vgpreload_memcheck-amd64-linux.so
@VG_PPC32_LINUX_TRUE@am__append_3 = memcheck-ppc32-linux vgpreload_memcheck-ppc32-linux.so
subdir = memcheck
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
@VG_X86_LINUX_TRUE@am__EXEEXT_1 = memcheck-x86-linux$(EXEEXT) \
@VG_X86_LINUX_TRUE@	vgpreload_memcheck-x86-linux.so$(EXEEXT)
@VG_AMD64_LINUX_TRUE@am__EXEEXT_2 = memcheck-amd64-linux$(EXEEXT) \
@VG_AMD64_LINUX_TRUE@	vgpreload_memcheck-amd64-linux.so$(EXEEXT)
@VG_PPC32_LINUX_TRUE@am__EXEEXT_3 = memcheck-ppc32-linux$(EXEEXT) \
@VG_PPC32_LINUX_TRUE@	vgpreload_memcheck-ppc32-linux.so$(EXEEXT)
PROGRAMS = $(noinst_PROGRAMS)
am__objects_1 = memcheck_amd64_linux-mac_leakcheck.$(OBJEXT) \
	memcheck_amd64_linux-mac_malloc_wrappers.$(OBJEXT) \
	memcheck_amd64_linux-mc_main.$(OBJEXT) \
	memcheck_amd64_linux-mac_shared.$(OBJEXT) \
	memcheck_amd64_linux-mc_translate.$(OBJEXT)
am_memcheck_amd64_linux_OBJECTS = $(am__objects_1)
memcheck_amd64_linux_OBJECTS = $(am_memcheck_amd64_linux_OBJECTS)
am__DEPENDENCIES_1 =  \
	$(top_builddir)/coregrind/libcoregrind_amd64_linux.a \
	@VEX_DIR@/libvex_amd64_linux.a
am__DEPENDENCIES_2 =
am__DEPENDENCIES_3 = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am__objects_2 = memcheck_ppc32_linux-mac_leakcheck.$(OBJEXT) \
	memcheck_ppc32_linux-mac_malloc_wrappers.$(OBJEXT) \
	memcheck_ppc32_linux-mc_main.$(OBJEXT) \
	memcheck_ppc32_linux-mac_shared.$(OBJEXT) \
	memcheck_ppc32_linux-mc_translate.$(OBJEXT)
am_memcheck_ppc32_linux_OBJECTS = $(am__objects_2)
memcheck_ppc32_linux_OBJECTS = $(am_memcheck_ppc32_linux_OBJECTS)
am__DEPENDENCIES_4 =  \
	$(top_builddir)/coregrind/libcoregrind_ppc32_linux.a \
	@VEX_DIR@/libvex_ppc32_linux.a
am__DEPENDENCIES_5 = $(am__DEPENDENCIES_4) $(am__DEPENDENCIES_2)
am__objects_3 = memcheck_x86_linux-mac_leakcheck.$(OBJEXT) \
	memcheck_x86_linux-mac_malloc_wrappers.$(OBJEXT) \
	memcheck_x86_linux-mc_main.$(OBJEXT) \
	memcheck_x86_linux-mac_shared.$(OBJEXT) \
	memcheck_x86_linux-mc_translate.$(OBJEXT)
am_memcheck_x86_linux_OBJECTS = $(am__objects_3)
memcheck_x86_linux_OBJECTS = $(am_memcheck_x86_linux_OBJECTS)
am__DEPENDENCIES_6 =  \
	$(top_builddir)/coregrind/libcoregrind_x86_linux.a \
	@VEX_DIR@/libvex_x86_linux.a
am__DEPENDENCIES_7 = $(am__DEPENDENCIES_6) $(am__DEPENDENCIES_2)
am__objects_4 = vgpreload_memcheck_amd64_linux_so-mac_replace_strmem.$(OBJEXT)
am_vgpreload_memcheck_amd64_linux_so_OBJECTS = $(am__objects_4)
vgpreload_memcheck_amd64_linux_so_OBJECTS =  \
	$(am_vgpreload_memcheck_amd64_linux_so_OBJECTS)
vgpreload_memcheck_amd64_linux_so_LDADD = $(LDADD)
am__objects_5 = vgpreload_memcheck_ppc32_linux_so-mac_replace_strmem.$(OBJEXT)
am_vgpreload_memcheck_ppc32_linux_so_OBJECTS = $(am__objects_5)
vgpreload_memcheck_ppc32_linux_so_OBJECTS =  \
	$(am_vgpreload_memcheck_ppc32_linux_so_OBJECTS)
vgpreload_memcheck_ppc32_linux_so_LDADD = $(LDADD)
am__objects_6 =  \
	vgpreload_memcheck_x86_linux_so-mac_replace_strmem.$(OBJEXT)
am_vgpreload_memcheck_x86_linux_so_OBJECTS = $(am__objects_6)
vgpreload_memcheck_x86_linux_so_OBJECTS =  \
	$(am_vgpreload_memcheck_x86_linux_so_OBJECTS)
vgpreload_memcheck_x86_linux_so_LDADD = $(LDADD)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(memcheck_amd64_linux_SOURCES) \
	$(memcheck_ppc32_linux_SOURCES) $(memcheck_x86_linux_SOURCES) \
	$(vgpreload_memcheck_amd64_linux_so_SOURCES) \
	$(vgpreload_memcheck_ppc32_linux_so_SOURCES) \
	$(vgpreload_memcheck_x86_linux_so_SOURCES)
DIST_SOURCES = $(memcheck_amd64_linux_SOURCES) \
	$(memcheck_ppc32_linux_SOURCES) $(memcheck_x86_linux_SOURCES) \
	$(vgpreload_memcheck_amd64_linux_so_SOURCES) \
	$(vgpreload_memcheck_ppc32_linux_so_SOURCES) \
	$(vgpreload_memcheck_x86_linux_so_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-exec-recursive install-info-recursive \
	install-recursive installcheck-recursive installdirs-recursive \
	pdf-recursive ps-recursive uninstall-info-recursive \
	uninstall-recursive
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(mcincludedir)"
mcincludeHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(mcinclude_HEADERS) $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCAS = @CCAS@
CCASFLAGS = @CCASFLAGS@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFAULT_SUPP = @DEFAULT_SUPP@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DISTCHECK_CONFIGURE_FLAGS = @DISTCHECK_CONFIGURE_FLAGS@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FLAG_M32 = @FLAG_M32@
FLAG_MMMX = @FLAG_MMMX@
FLAG_MSSE = @FLAG_MSSE@
GDB = @GDB@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAINTAINER_MODE_FALSE = @MAINTAINER_MODE_FALSE@
MAINTAINER_MODE_TRUE = @MAINTAINER_MODE_TRUE@
MAKEINFO = @MAKEINFO@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
PREFERRED_STACK_BOUNDARY = @PREFERRED_STACK_BOUNDARY@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VALT_LOAD_ADDRESS = @VALT_LOAD_ADDRESS@
VERSION = @VERSION@
VEX_DIR = @VEX_DIR@
VG_AMD64_LINUX_FALSE = @VG_AMD64_LINUX_FALSE@
VG_AMD64_LINUX_TRUE = @VG_AMD64_LINUX_TRUE@
VG_ARCH = @VG_ARCH@
VG_ARCH_ALL = @VG_ARCH_ALL@
VG_MAKE_PLATFORM = @VG_MAKE_PLATFORM@
VG_OS = @VG_OS@
VG_OS_ALL = @VG_OS_ALL@
VG_PLATFORM = @VG_PLATFORM@
VG_PLATFORM_ALL = @VG_PLATFORM_ALL@
VG_PPC32_LINUX_FALSE = @VG_PPC32_LINUX_FALSE@
VG_PPC32_LINUX_TRUE = @VG_PPC32_LINUX_TRUE@
VG_X86_LINUX_FALSE = @VG_X86_LINUX_FALSE@
VG_X86_LINUX_TRUE = @VG_X86_LINUX_TRUE@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
prefix = @prefix@
program_transform_name = @program_transform_name@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
SUBDIRS = . tests docs
valdir = $(libdir)/valgrind
inplacedir = $(top_builddir)/.in_place
add_includes_x86_linux = -I$(top_srcdir)/include \
		-I@VEX_DIR@/pub \
		-DVGA_x86=1 \
		-DVGO_linux=1 \
		-DVGP_x86_linux=1

add_includes_amd64_linux = -I$(top_srcdir)/include \
		-I@VEX_DIR@/pub \
		-DVGA_amd64=1 \
		-DVGO_linux=1 \
		-DVGP_amd64_linux=1

add_includes_ppc32_linux = -I$(top_srcdir)/include \
		-I@VEX_DIR@/pub \
		-DVGA_ppc32=1 \
		-DVGO_linux=1 \
		-DVGP_ppc32_linux=1

AM_CFLAGS_BASE = -O -g -Wmissing-prototypes -Winline -Wall -Wshadow \
                 -Wpointer-arith -Wstrict-prototypes -Wmissing-declarations

AM_CFLAGS_PIC = -fpic -fno-omit-frame-pointer
AM_CPPFLAGS_X86_LINUX = $(add_includes_x86_linux)
AM_CFLAGS_X86_LINUX = $(WERROR) @FLAG_M32@ @PREFERRED_STACK_BOUNDARY@ $(AM_CFLAGS_BASE)
AM_CCASFLAGS_X86_LINUX = $(add_includes_x86_linux) @FLAG_M32@ -g
AM_CPPFLAGS_AMD64_LINUX = $(add_includes_amd64_linux)
AM_CFLAGS_AMD64_LINUX = $(WERROR) -m64 -fomit-frame-pointer @PREFERRED_STACK_BOUNDARY@ $(AM_CFLAGS_BASE)
AM_CCASFLAGS_AMD64_LINUX = $(add_includes_amd64_linux) -m64 -g
AM_CPPFLAGS_PPC32_LINUX = $(add_includes_ppc32_linux)
AM_CFLAGS_PPC32_LINUX = $(WERROR) $(AM_CFLAGS_BASE)
AM_CCASFLAGS_PPC32_LINUX = $(add_includes_ppc32_linux) -Wa,-maltivec -g
AM_CPPFLAGS = $(AM_CPPFLAGS_@VG_MAKE_PLATFORM@)
AM_CFLAGS = $(AM_CFLAGS_@VG_MAKE_PLATFORM@)
AM_CCASFLAGS = $(AM_CCASFLAGS_@VG_MAKE_PLATFORM@)
LIBREPLACEMALLOC_X86_LINUX = \
	$(top_builddir)/coregrind/libreplacemalloc_toolpreload_x86_linux.a

LIBREPLACEMALLOC_AMD64_LINUX = \
	$(top_builddir)/coregrind/libreplacemalloc_toolpreload_amd64_linux.a

LIBREPLACEMALLOC_PPC32_LINUX = \
	$(top_builddir)/coregrind/libreplacemalloc_toolpreload_ppc32_linux.a

COREGRIND_LIBS_X86_LINUX = \
	$(top_builddir)/coregrind/libcoregrind_x86_linux.a \
	@VEX_DIR@/libvex_x86_linux.a

COREGRIND_LIBS_AMD64_LINUX = \
	$(top_builddir)/coregrind/libcoregrind_amd64_linux.a \
	@VEX_DIR@/libvex_amd64_linux.a

COREGRIND_LIBS_PPC32_LINUX = \
	$(top_builddir)/coregrind/libcoregrind_ppc32_linux.a \
	@VEX_DIR@/libvex_ppc32_linux.a

TOOL_LDADD_COMMON = -lgcc
TOOL_LDFLAGS_COMMON = -static \
	-Wl,-defsym,valt_load_address=@VALT_LOAD_ADDRESS@ \
	-nodefaultlibs -nostartfiles -u _start

TOOL_LDADD_X86_LINUX = $(COREGRIND_LIBS_X86_LINUX) $(TOOL_LDADD_COMMON)
TOOL_LDFLAGS_X86_LINUX = \
	$(TOOL_LDFLAGS_COMMON) @FLAG_M32@ \
	-Wl,-T,$(top_builddir)/valt_load_address_x86_linux.lds

TOOL_LDADD_AMD64_LINUX = $(COREGRIND_LIBS_AMD64_LINUX) $(TOOL_LDADD_COMMON)
TOOL_LDFLAGS_AMD64_LINUX = \
	$(TOOL_LDFLAGS_COMMON) -m64 \
	-Wl,-T,$(top_builddir)/valt_load_address_amd64_linux.lds

TOOL_LDADD_PPC32_LINUX = $(COREGRIND_LIBS_PPC32_LINUX) $(TOOL_LDADD_COMMON)
TOOL_LDFLAGS_PPC32_LINUX = \
	$(TOOL_LDFLAGS_COMMON) \
	-Wl,-T,$(top_builddir)/valt_load_address_ppc32_linux.lds

PRELOAD_LDFLAGS_COMMON = -nostdlib -shared -Wl,-z,interpose,-z,initfirst
PRELOAD_LDFLAGS_X86_LINUX = $(PRELOAD_LDFLAGS_COMMON) @FLAG_M32@
PRELOAD_LDFLAGS_AMD64_LINUX = $(PRELOAD_LDFLAGS_COMMON) -m64
PRELOAD_LDFLAGS_PPC32_LINUX = $(PRELOAD_LDFLAGS_COMMON)
LIBREPLACEMALLOC_LDFLAGS_X86_LINUX = \
	-Wl,--whole-archive \
	$(LIBREPLACEMALLOC_X86_LINUX) \
	-Wl,--no-whole-archive

LIBREPLACEMALLOC_LDFLAGS_AMD64_LINUX = \
	-Wl,--whole-archive \
	$(LIBREPLACEMALLOC_AMD64_LINUX) \
	-Wl,--no-whole-archive

LIBREPLACEMALLOC_LDFLAGS_PPC32_LINUX = \
	-Wl,--whole-archive \
	$(LIBREPLACEMALLOC_PPC32_LINUX) \
	-Wl,--no-whole-archive

VGPRELOAD_MEMCHECK_SOURCES_COMMON = mac_replace_strmem.c
vgpreload_memcheck_x86_linux_so_SOURCES = $(VGPRELOAD_MEMCHECK_SOURCES_COMMON)
vgpreload_memcheck_x86_linux_so_CPPFLAGS = $(AM_CPPFLAGS_X86_LINUX)
vgpreload_memcheck_x86_linux_so_CFLAGS = $(AM_CFLAGS_X86_LINUX) $(AM_CFLAGS_PIC) -O2
vgpreload_memcheck_x86_linux_so_CCASFLAGS = $(AM_CCASFLAGS_X86_LINUX)
vgpreload_memcheck_x86_linux_so_DEPENDENCIES = $(LIBREPLACEMALLOC_X86_LINUX)
vgpreload_memcheck_x86_linux_so_LDFLAGS = \
	$(PRELOAD_LDFLAGS_X86_LINUX) \
	$(LIBREPLACEMALLOC_LDFLAGS_X86_LINUX)

vgpreload_memcheck_amd64_linux_so_SOURCES = $(VGPRELOAD_MEMCHECK_SOURCES_COMMON)
vgpreload_memcheck_amd64_linux_so_CPPFLAGS = $(AM_CPPFLAGS_AMD64_LINUX)
vgpreload_memcheck_amd64_linux_so_CFLAGS = $(AM_CFLAGS_AMD64_LINUX) $(AM_CFLAGS_PIC) -O2
vgpreload_memcheck_amd64_linux_so_CCASFLAGS = $(AM_CCASFLAGS_AMD64_LINUX)
vgpreload_memcheck_amd64_linux_so_DEPENDENCIES = $(LIBREPLACEMALLOC_AMD64_LINUX)
vgpreload_memcheck_amd64_linux_so_LDFLAGS = \
	$(PRELOAD_LDFLAGS_AMD64_LINUX) \
	$(LIBREPLACEMALLOC_LDFLAGS_AMD64_LINUX)

vgpreload_memcheck_ppc32_linux_so_SOURCES = $(VGPRELOAD_MEMCHECK_SOURCES_COMMON)
vgpreload_memcheck_ppc32_linux_so_CPPFLAGS = $(AM_CPPFLAGS_PPC32_LINUX)
vgpreload_memcheck_ppc32_linux_so_CFLAGS = $(AM_CFLAGS_PPC32_LINUX) $(AM_CFLAGS_PIC) -O2
vgpreload_memcheck_ppc32_linux_so_CCASFLAGS = $(AM_CCASFLAGS_PPC32_LINUX)
vgpreload_memcheck_ppc32_linux_so_DEPENDENCIES = $(LIBREPLACEMALLOC_PPC32_LINUX)
vgpreload_memcheck_ppc32_linux_so_LDFLAGS = \
	$(PRELOAD_LDFLAGS_PPC32_LINUX) \
	$(LIBREPLACEMALLOC_LDFLAGS_PPC32_LINUX)

MEMCHECK_SOURCES_COMMON = \
	mac_leakcheck.c \
	mac_malloc_wrappers.c \
	mc_main.c \
	mac_shared.c \
	mc_translate.c

memcheck_x86_linux_SOURCES = $(MEMCHECK_SOURCES_COMMON)
memcheck_x86_linux_CPPFLAGS = $(AM_CPPFLAGS_X86_LINUX)
memcheck_x86_linux_CFLAGS = $(AM_CFLAGS_X86_LINUX) -O2
memcheck_x86_linux_CCASFLAGS = $(AM_CCASFLAGS_X86_LINUX)
memcheck_x86_linux_DEPENDENCIES = $(COREGRIND_LIBS_X86_LINUX)
memcheck_x86_linux_LDADD = $(TOOL_LDADD_X86_LINUX)
memcheck_x86_linux_LDFLAGS = $(TOOL_LDFLAGS_X86_LINUX)
memcheck_amd64_linux_SOURCES = $(MEMCHECK_SOURCES_COMMON)
memcheck_amd64_linux_CPPFLAGS = $(AM_CPPFLAGS_AMD64_LINUX)
memcheck_amd64_linux_CFLAGS = $(AM_CFLAGS_AMD64_LINUX) -O2
memcheck_amd64_linux_CCASFLAGS = $(AM_CCASFLAGS_AMD64_LINUX)
memcheck_amd64_linux_DEPENDENCIES = $(COREGRIND_LIBS_AMD64_LINUX)
memcheck_amd64_linux_LDADD = $(TOOL_LDADD_AMD64_LINUX)
memcheck_amd64_linux_LDFLAGS = $(TOOL_LDFLAGS_AMD64_LINUX)
memcheck_ppc32_linux_SOURCES = $(MEMCHECK_SOURCES_COMMON)
memcheck_ppc32_linux_CPPFLAGS = $(AM_CPPFLAGS_PPC32_LINUX)
memcheck_ppc32_linux_CFLAGS = $(AM_CFLAGS_PPC32_LINUX) -O2
memcheck_ppc32_linux_CCASFLAGS = $(AM_CCASFLAGS_PPC32_LINUX)
memcheck_ppc32_linux_DEPENDENCIES = $(COREGRIND_LIBS_PPC32_LINUX)
memcheck_ppc32_linux_LDADD = $(TOOL_LDADD_PPC32_LINUX)
memcheck_ppc32_linux_LDFLAGS = $(TOOL_LDFLAGS_PPC32_LINUX)
mcincludedir = $(includedir)/valgrind
mcinclude_HEADERS = \
	memcheck.h

noinst_HEADERS = \
	mac_shared.h	\
	mc_include.h

all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am $(top_srcdir)/Makefile.tool.am $(top_srcdir)/Makefile.all.am $(top_srcdir)/Makefile.install.am $(top_srcdir)/Makefile.tool-flags.am $(top_srcdir)/Makefile.flags.am $(top_srcdir)/Makefile.tool-inplace.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  memcheck/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  memcheck/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)
memcheck-amd64-linux$(EXEEXT): $(memcheck_amd64_linux_OBJECTS) $(memcheck_amd64_linux_DEPENDENCIES) 
	@rm -f memcheck-amd64-linux$(EXEEXT)
	$(LINK) $(memcheck_amd64_linux_LDFLAGS) $(memcheck_amd64_linux_OBJECTS) $(memcheck_amd64_linux_LDADD) $(LIBS)
memcheck-ppc32-linux$(EXEEXT): $(memcheck_ppc32_linux_OBJECTS) $(memcheck_ppc32_linux_DEPENDENCIES) 
	@rm -f memcheck-ppc32-linux$(EXEEXT)
	$(LINK) $(memcheck_ppc32_linux_LDFLAGS) $(memcheck_ppc32_linux_OBJECTS) $(memcheck_ppc32_linux_LDADD) $(LIBS)
memcheck-x86-linux$(EXEEXT): $(memcheck_x86_linux_OBJECTS) $(memcheck_x86_linux_DEPENDENCIES) 
	@rm -f memcheck-x86-linux$(EXEEXT)
	$(LINK) $(memcheck_x86_linux_LDFLAGS) $(memcheck_x86_linux_OBJECTS) $(memcheck_x86_linux_LDADD) $(LIBS)
vgpreload_memcheck-amd64-linux.so$(EXEEXT): $(vgpreload_memcheck_amd64_linux_so_OBJECTS) $(vgpreload_memcheck_amd64_linux_so_DEPENDENCIES) 
	@rm -f vgpreload_memcheck-amd64-linux.so$(EXEEXT)
	$(LINK) $(vgpreload_memcheck_amd64_linux_so_LDFLAGS) $(vgpreload_memcheck_amd64_linux_so_OBJECTS) $(vgpreload_memcheck_amd64_linux_so_LDADD) $(LIBS)
vgpreload_memcheck-ppc32-linux.so$(EXEEXT): $(vgpreload_memcheck_ppc32_linux_so_OBJECTS) $(vgpreload_memcheck_ppc32_linux_so_DEPENDENCIES) 
	@rm -f vgpreload_memcheck-ppc32-linux.so$(EXEEXT)
	$(LINK) $(vgpreload_memcheck_ppc32_linux_so_LDFLAGS) $(vgpreload_memcheck_ppc32_linux_so_OBJECTS) $(vgpreload_memcheck_ppc32_linux_so_LDADD) $(LIBS)
vgpreload_memcheck-x86-linux.so$(EXEEXT): $(vgpreload_memcheck_x86_linux_so_OBJECTS) $(vgpreload_memcheck_x86_linux_so_DEPENDENCIES) 
	@rm -f vgpreload_memcheck-x86-linux.so$(EXEEXT)
	$(LINK) $(vgpreload_memcheck_x86_linux_so_LDFLAGS) $(vgpreload_memcheck_x86_linux_so_OBJECTS) $(vgpreload_memcheck_x86_linux_so_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/memcheck_amd64_linux-mac_leakcheck.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/memcheck_amd64_linux-mac_malloc_wrappers.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/memcheck_amd64_linux-mac_shared.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/memcheck_amd64_linux-mc_main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/memcheck_amd64_linux-mc_translate.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/memcheck_ppc32_linux-mac_leakcheck.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/memcheck_ppc32_linux-mac_malloc_wrappers.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/memcheck_ppc32_linux-mac_shared.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/memcheck_ppc32_linux-mc_main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/memcheck_ppc32_linux-mc_translate.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/memcheck_x86_linux-mac_leakcheck.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/memcheck_x86_linux-mac_malloc_wrappers.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/memcheck_x86_linux-mac_shared.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/memcheck_x86_linux-mc_main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/memcheck_x86_linux-mc_translate.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vgpreload_memcheck_amd64_linux_so-mac_replace_strmem.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vgpreload_memcheck_ppc32_linux_so-mac_replace_strmem.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vgpreload_memcheck_x86_linux_so-mac_replace_strmem.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

memcheck_amd64_linux-mac_leakcheck.o: mac_leakcheck.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_amd64_linux_CFLAGS) $(CFLAGS) -MT memcheck_amd64_linux-mac_leakcheck.o -MD -MP -MF "$(DEPDIR)/memcheck_amd64_linux-mac_leakcheck.Tpo" -c -o memcheck_amd64_linux-mac_leakcheck.o `test -f 'mac_leakcheck.c' || echo '$(srcdir)/'`mac_leakcheck.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/memcheck_amd64_linux-mac_leakcheck.Tpo" "$(DEPDIR)/memcheck_amd64_linux-mac_leakcheck.Po"; else rm -f "$(DEPDIR)/memcheck_amd64_linux-mac_leakcheck.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='mac_leakcheck.c' object='memcheck_amd64_linux-mac_leakcheck.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_amd64_linux_CFLAGS) $(CFLAGS) -c -o memcheck_amd64_linux-mac_leakcheck.o `test -f 'mac_leakcheck.c' || echo '$(srcdir)/'`mac_leakcheck.c

memcheck_amd64_linux-mac_leakcheck.obj: mac_leakcheck.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_amd64_linux_CFLAGS) $(CFLAGS) -MT memcheck_amd64_linux-mac_leakcheck.obj -MD -MP -MF "$(DEPDIR)/memcheck_amd64_linux-mac_leakcheck.Tpo" -c -o memcheck_amd64_linux-mac_leakcheck.obj `if test -f 'mac_leakcheck.c'; then $(CYGPATH_W) 'mac_leakcheck.c'; else $(CYGPATH_W) '$(srcdir)/mac_leakcheck.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/memcheck_amd64_linux-mac_leakcheck.Tpo" "$(DEPDIR)/memcheck_amd64_linux-mac_leakcheck.Po"; else rm -f "$(DEPDIR)/memcheck_amd64_linux-mac_leakcheck.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='mac_leakcheck.c' object='memcheck_amd64_linux-mac_leakcheck.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_amd64_linux_CFLAGS) $(CFLAGS) -c -o memcheck_amd64_linux-mac_leakcheck.obj `if test -f 'mac_leakcheck.c'; then $(CYGPATH_W) 'mac_leakcheck.c'; else $(CYGPATH_W) '$(srcdir)/mac_leakcheck.c'; fi`

memcheck_amd64_linux-mac_malloc_wrappers.o: mac_malloc_wrappers.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_amd64_linux_CFLAGS) $(CFLAGS) -MT memcheck_amd64_linux-mac_malloc_wrappers.o -MD -MP -MF "$(DEPDIR)/memcheck_amd64_linux-mac_malloc_wrappers.Tpo" -c -o memcheck_amd64_linux-mac_malloc_wrappers.o `test -f 'mac_malloc_wrappers.c' || echo '$(srcdir)/'`mac_malloc_wrappers.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/memcheck_amd64_linux-mac_malloc_wrappers.Tpo" "$(DEPDIR)/memcheck_amd64_linux-mac_malloc_wrappers.Po"; else rm -f "$(DEPDIR)/memcheck_amd64_linux-mac_malloc_wrappers.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='mac_malloc_wrappers.c' object='memcheck_amd64_linux-mac_malloc_wrappers.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_amd64_linux_CFLAGS) $(CFLAGS) -c -o memcheck_amd64_linux-mac_malloc_wrappers.o `test -f 'mac_malloc_wrappers.c' || echo '$(srcdir)/'`mac_malloc_wrappers.c

memcheck_amd64_linux-mac_malloc_wrappers.obj: mac_malloc_wrappers.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_amd64_linux_CFLAGS) $(CFLAGS) -MT memcheck_amd64_linux-mac_malloc_wrappers.obj -MD -MP -MF "$(DEPDIR)/memcheck_amd64_linux-mac_malloc_wrappers.Tpo" -c -o memcheck_amd64_linux-mac_malloc_wrappers.obj `if test -f 'mac_malloc_wrappers.c'; then $(CYGPATH_W) 'mac_malloc_wrappers.c'; else $(CYGPATH_W) '$(srcdir)/mac_malloc_wrappers.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/memcheck_amd64_linux-mac_malloc_wrappers.Tpo" "$(DEPDIR)/memcheck_amd64_linux-mac_malloc_wrappers.Po"; else rm -f "$(DEPDIR)/memcheck_amd64_linux-mac_malloc_wrappers.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='mac_malloc_wrappers.c' object='memcheck_amd64_linux-mac_malloc_wrappers.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_amd64_linux_CFLAGS) $(CFLAGS) -c -o memcheck_amd64_linux-mac_malloc_wrappers.obj `if test -f 'mac_malloc_wrappers.c'; then $(CYGPATH_W) 'mac_malloc_wrappers.c'; else $(CYGPATH_W) '$(srcdir)/mac_malloc_wrappers.c'; fi`

memcheck_amd64_linux-mc_main.o: mc_main.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_amd64_linux_CFLAGS) $(CFLAGS) -MT memcheck_amd64_linux-mc_main.o -MD -MP -MF "$(DEPDIR)/memcheck_amd64_linux-mc_main.Tpo" -c -o memcheck_amd64_linux-mc_main.o `test -f 'mc_main.c' || echo '$(srcdir)/'`mc_main.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/memcheck_amd64_linux-mc_main.Tpo" "$(DEPDIR)/memcheck_amd64_linux-mc_main.Po"; else rm -f "$(DEPDIR)/memcheck_amd64_linux-mc_main.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='mc_main.c' object='memcheck_amd64_linux-mc_main.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_amd64_linux_CFLAGS) $(CFLAGS) -c -o memcheck_amd64_linux-mc_main.o `test -f 'mc_main.c' || echo '$(srcdir)/'`mc_main.c

memcheck_amd64_linux-mc_main.obj: mc_main.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_amd64_linux_CFLAGS) $(CFLAGS) -MT memcheck_amd64_linux-mc_main.obj -MD -MP -MF "$(DEPDIR)/memcheck_amd64_linux-mc_main.Tpo" -c -o memcheck_amd64_linux-mc_main.obj `if test -f 'mc_main.c'; then $(CYGPATH_W) 'mc_main.c'; else $(CYGPATH_W) '$(srcdir)/mc_main.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/memcheck_amd64_linux-mc_main.Tpo" "$(DEPDIR)/memcheck_amd64_linux-mc_main.Po"; else rm -f "$(DEPDIR)/memcheck_amd64_linux-mc_main.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='mc_main.c' object='memcheck_amd64_linux-mc_main.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_amd64_linux_CFLAGS) $(CFLAGS) -c -o memcheck_amd64_linux-mc_main.obj `if test -f 'mc_main.c'; then $(CYGPATH_W) 'mc_main.c'; else $(CYGPATH_W) '$(srcdir)/mc_main.c'; fi`

memcheck_amd64_linux-mac_shared.o: mac_shared.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_amd64_linux_CFLAGS) $(CFLAGS) -MT memcheck_amd64_linux-mac_shared.o -MD -MP -MF "$(DEPDIR)/memcheck_amd64_linux-mac_shared.Tpo" -c -o memcheck_amd64_linux-mac_shared.o `test -f 'mac_shared.c' || echo '$(srcdir)/'`mac_shared.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/memcheck_amd64_linux-mac_shared.Tpo" "$(DEPDIR)/memcheck_amd64_linux-mac_shared.Po"; else rm -f "$(DEPDIR)/memcheck_amd64_linux-mac_shared.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='mac_shared.c' object='memcheck_amd64_linux-mac_shared.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_amd64_linux_CFLAGS) $(CFLAGS) -c -o memcheck_amd64_linux-mac_shared.o `test -f 'mac_shared.c' || echo '$(srcdir)/'`mac_shared.c

memcheck_amd64_linux-mac_shared.obj: mac_shared.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_amd64_linux_CFLAGS) $(CFLAGS) -MT memcheck_amd64_linux-mac_shared.obj -MD -MP -MF "$(DEPDIR)/memcheck_amd64_linux-mac_shared.Tpo" -c -o memcheck_amd64_linux-mac_shared.obj `if test -f 'mac_shared.c'; then $(CYGPATH_W) 'mac_shared.c'; else $(CYGPATH_W) '$(srcdir)/mac_shared.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/memcheck_amd64_linux-mac_shared.Tpo" "$(DEPDIR)/memcheck_amd64_linux-mac_shared.Po"; else rm -f "$(DEPDIR)/memcheck_amd64_linux-mac_shared.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='mac_shared.c' object='memcheck_amd64_linux-mac_shared.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_amd64_linux_CFLAGS) $(CFLAGS) -c -o memcheck_amd64_linux-mac_shared.obj `if test -f 'mac_shared.c'; then $(CYGPATH_W) 'mac_shared.c'; else $(CYGPATH_W) '$(srcdir)/mac_shared.c'; fi`

memcheck_amd64_linux-mc_translate.o: mc_translate.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_amd64_linux_CFLAGS) $(CFLAGS) -MT memcheck_amd64_linux-mc_translate.o -MD -MP -MF "$(DEPDIR)/memcheck_amd64_linux-mc_translate.Tpo" -c -o memcheck_amd64_linux-mc_translate.o `test -f 'mc_translate.c' || echo '$(srcdir)/'`mc_translate.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/memcheck_amd64_linux-mc_translate.Tpo" "$(DEPDIR)/memcheck_amd64_linux-mc_translate.Po"; else rm -f "$(DEPDIR)/memcheck_amd64_linux-mc_translate.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='mc_translate.c' object='memcheck_amd64_linux-mc_translate.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_amd64_linux_CFLAGS) $(CFLAGS) -c -o memcheck_amd64_linux-mc_translate.o `test -f 'mc_translate.c' || echo '$(srcdir)/'`mc_translate.c

memcheck_amd64_linux-mc_translate.obj: mc_translate.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_amd64_linux_CFLAGS) $(CFLAGS) -MT memcheck_amd64_linux-mc_translate.obj -MD -MP -MF "$(DEPDIR)/memcheck_amd64_linux-mc_translate.Tpo" -c -o memcheck_amd64_linux-mc_translate.obj `if test -f 'mc_translate.c'; then $(CYGPATH_W) 'mc_translate.c'; else $(CYGPATH_W) '$(srcdir)/mc_translate.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/memcheck_amd64_linux-mc_translate.Tpo" "$(DEPDIR)/memcheck_amd64_linux-mc_translate.Po"; else rm -f "$(DEPDIR)/memcheck_amd64_linux-mc_translate.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='mc_translate.c' object='memcheck_amd64_linux-mc_translate.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_amd64_linux_CFLAGS) $(CFLAGS) -c -o memcheck_amd64_linux-mc_translate.obj `if test -f 'mc_translate.c'; then $(CYGPATH_W) 'mc_translate.c'; else $(CYGPATH_W) '$(srcdir)/mc_translate.c'; fi`

memcheck_ppc32_linux-mac_leakcheck.o: mac_leakcheck.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_ppc32_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_ppc32_linux_CFLAGS) $(CFLAGS) -MT memcheck_ppc32_linux-mac_leakcheck.o -MD -MP -MF "$(DEPDIR)/memcheck_ppc32_linux-mac_leakcheck.Tpo" -c -o memcheck_ppc32_linux-mac_leakcheck.o `test -f 'mac_leakcheck.c' || echo '$(srcdir)/'`mac_leakcheck.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/memcheck_ppc32_linux-mac_leakcheck.Tpo" "$(DEPDIR)/memcheck_ppc32_linux-mac_leakcheck.Po"; else rm -f "$(DEPDIR)/memcheck_ppc32_linux-mac_leakcheck.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='mac_leakcheck.c' object='memcheck_ppc32_linux-mac_leakcheck.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_ppc32_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_ppc32_linux_CFLAGS) $(CFLAGS) -c -o memcheck_ppc32_linux-mac_leakcheck.o `test -f 'mac_leakcheck.c' || echo '$(srcdir)/'`mac_leakcheck.c

memcheck_ppc32_linux-mac_leakcheck.obj: mac_leakcheck.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_ppc32_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_ppc32_linux_CFLAGS) $(CFLAGS) -MT memcheck_ppc32_linux-mac_leakcheck.obj -MD -MP -MF "$(DEPDIR)/memcheck_ppc32_linux-mac_leakcheck.Tpo" -c -o memcheck_ppc32_linux-mac_leakcheck.obj `if test -f 'mac_leakcheck.c'; then $(CYGPATH_W) 'mac_leakcheck.c'; else $(CYGPATH_W) '$(srcdir)/mac_leakcheck.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/memcheck_ppc32_linux-mac_leakcheck.Tpo" "$(DEPDIR)/memcheck_ppc32_linux-mac_leakcheck.Po"; else rm -f "$(DEPDIR)/memcheck_ppc32_linux-mac_leakcheck.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='mac_leakcheck.c' object='memcheck_ppc32_linux-mac_leakcheck.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_ppc32_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_ppc32_linux_CFLAGS) $(CFLAGS) -c -o memcheck_ppc32_linux-mac_leakcheck.obj `if test -f 'mac_leakcheck.c'; then $(CYGPATH_W) 'mac_leakcheck.c'; else $(CYGPATH_W) '$(srcdir)/mac_leakcheck.c'; fi`

memcheck_ppc32_linux-mac_malloc_wrappers.o: mac_malloc_wrappers.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_ppc32_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_ppc32_linux_CFLAGS) $(CFLAGS) -MT memcheck_ppc32_linux-mac_malloc_wrappers.o -MD -MP -MF "$(DEPDIR)/memcheck_ppc32_linux-mac_malloc_wrappers.Tpo" -c -o memcheck_ppc32_linux-mac_malloc_wrappers.o `test -f 'mac_malloc_wrappers.c' || echo '$(srcdir)/'`mac_malloc_wrappers.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/memcheck_ppc32_linux-mac_malloc_wrappers.Tpo" "$(DEPDIR)/memcheck_ppc32_linux-mac_malloc_wrappers.Po"; else rm -f "$(DEPDIR)/memcheck_ppc32_linux-mac_malloc_wrappers.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='mac_malloc_wrappers.c' object='memcheck_ppc32_linux-mac_malloc_wrappers.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_ppc32_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_ppc32_linux_CFLAGS) $(CFLAGS) -c -o memcheck_ppc32_linux-mac_malloc_wrappers.o `test -f 'mac_malloc_wrappers.c' || echo '$(srcdir)/'`mac_malloc_wrappers.c

memcheck_ppc32_linux-mac_malloc_wrappers.obj: mac_malloc_wrappers.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_ppc32_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_ppc32_linux_CFLAGS) $(CFLAGS) -MT memcheck_ppc32_linux-mac_malloc_wrappers.obj -MD -MP -MF "$(DEPDIR)/memcheck_ppc32_linux-mac_malloc_wrappers.Tpo" -c -o memcheck_ppc32_linux-mac_malloc_wrappers.obj `if test -f 'mac_malloc_wrappers.c'; then $(CYGPATH_W) 'mac_malloc_wrappers.c'; else $(CYGPATH_W) '$(srcdir)/mac_malloc_wrappers.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/memcheck_ppc32_linux-mac_malloc_wrappers.Tpo" "$(DEPDIR)/memcheck_ppc32_linux-mac_malloc_wrappers.Po"; else rm -f "$(DEPDIR)/memcheck_ppc32_linux-mac_malloc_wrappers.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='mac_malloc_wrappers.c' object='memcheck_ppc32_linux-mac_malloc_wrappers.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_ppc32_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_ppc32_linux_CFLAGS) $(CFLAGS) -c -o memcheck_ppc32_linux-mac_malloc_wrappers.obj `if test -f 'mac_malloc_wrappers.c'; then $(CYGPATH_W) 'mac_malloc_wrappers.c'; else $(CYGPATH_W) '$(srcdir)/mac_malloc_wrappers.c'; fi`

memcheck_ppc32_linux-mc_main.o: mc_main.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_ppc32_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_ppc32_linux_CFLAGS) $(CFLAGS) -MT memcheck_ppc32_linux-mc_main.o -MD -MP -MF "$(DEPDIR)/memcheck_ppc32_linux-mc_main.Tpo" -c -o memcheck_ppc32_linux-mc_main.o `test -f 'mc_main.c' || echo '$(srcdir)/'`mc_main.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/memcheck_ppc32_linux-mc_main.Tpo" "$(DEPDIR)/memcheck_ppc32_linux-mc_main.Po"; else rm -f "$(DEPDIR)/memcheck_ppc32_linux-mc_main.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='mc_main.c' object='memcheck_ppc32_linux-mc_main.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_ppc32_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_ppc32_linux_CFLAGS) $(CFLAGS) -c -o memcheck_ppc32_linux-mc_main.o `test -f 'mc_main.c' || echo '$(srcdir)/'`mc_main.c

memcheck_ppc32_linux-mc_main.obj: mc_main.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_ppc32_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_ppc32_linux_CFLAGS) $(CFLAGS) -MT memcheck_ppc32_linux-mc_main.obj -MD -MP -MF "$(DEPDIR)/memcheck_ppc32_linux-mc_main.Tpo" -c -o memcheck_ppc32_linux-mc_main.obj `if test -f 'mc_main.c'; then $(CYGPATH_W) 'mc_main.c'; else $(CYGPATH_W) '$(srcdir)/mc_main.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/memcheck_ppc32_linux-mc_main.Tpo" "$(DEPDIR)/memcheck_ppc32_linux-mc_main.Po"; else rm -f "$(DEPDIR)/memcheck_ppc32_linux-mc_main.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='mc_main.c' object='memcheck_ppc32_linux-mc_main.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_ppc32_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_ppc32_linux_CFLAGS) $(CFLAGS) -c -o memcheck_ppc32_linux-mc_main.obj `if test -f 'mc_main.c'; then $(CYGPATH_W) 'mc_main.c'; else $(CYGPATH_W) '$(srcdir)/mc_main.c'; fi`

memcheck_ppc32_linux-mac_shared.o: mac_shared.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_ppc32_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_ppc32_linux_CFLAGS) $(CFLAGS) -MT memcheck_ppc32_linux-mac_shared.o -MD -MP -MF "$(DEPDIR)/memcheck_ppc32_linux-mac_shared.Tpo" -c -o memcheck_ppc32_linux-mac_shared.o `test -f 'mac_shared.c' || echo '$(srcdir)/'`mac_shared.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/memcheck_ppc32_linux-mac_shared.Tpo" "$(DEPDIR)/memcheck_ppc32_linux-mac_shared.Po"; else rm -f "$(DEPDIR)/memcheck_ppc32_linux-mac_shared.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='mac_shared.c' object='memcheck_ppc32_linux-mac_shared.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_ppc32_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_ppc32_linux_CFLAGS) $(CFLAGS) -c -o memcheck_ppc32_linux-mac_shared.o `test -f 'mac_shared.c' || echo '$(srcdir)/'`mac_shared.c

memcheck_ppc32_linux-mac_shared.obj: mac_shared.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_ppc32_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_ppc32_linux_CFLAGS) $(CFLAGS) -MT memcheck_ppc32_linux-mac_shared.obj -MD -MP -MF "$(DEPDIR)/memcheck_ppc32_linux-mac_shared.Tpo" -c -o memcheck_ppc32_linux-mac_shared.obj `if test -f 'mac_shared.c'; then $(CYGPATH_W) 'mac_shared.c'; else $(CYGPATH_W) '$(srcdir)/mac_shared.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/memcheck_ppc32_linux-mac_shared.Tpo" "$(DEPDIR)/memcheck_ppc32_linux-mac_shared.Po"; else rm -f "$(DEPDIR)/memcheck_ppc32_linux-mac_shared.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='mac_shared.c' object='memcheck_ppc32_linux-mac_shared.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_ppc32_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_ppc32_linux_CFLAGS) $(CFLAGS) -c -o memcheck_ppc32_linux-mac_shared.obj `if test -f 'mac_shared.c'; then $(CYGPATH_W) 'mac_shared.c'; else $(CYGPATH_W) '$(srcdir)/mac_shared.c'; fi`

memcheck_ppc32_linux-mc_translate.o: mc_translate.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_ppc32_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_ppc32_linux_CFLAGS) $(CFLAGS) -MT memcheck_ppc32_linux-mc_translate.o -MD -MP -MF "$(DEPDIR)/memcheck_ppc32_linux-mc_translate.Tpo" -c -o memcheck_ppc32_linux-mc_translate.o `test -f 'mc_translate.c' || echo '$(srcdir)/'`mc_translate.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/memcheck_ppc32_linux-mc_translate.Tpo" "$(DEPDIR)/memcheck_ppc32_linux-mc_translate.Po"; else rm -f "$(DEPDIR)/memcheck_ppc32_linux-mc_translate.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='mc_translate.c' object='memcheck_ppc32_linux-mc_translate.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_ppc32_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_ppc32_linux_CFLAGS) $(CFLAGS) -c -o memcheck_ppc32_linux-mc_translate.o `test -f 'mc_translate.c' || echo '$(srcdir)/'`mc_translate.c

memcheck_ppc32_linux-mc_translate.obj: mc_translate.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_ppc32_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_ppc32_linux_CFLAGS) $(CFLAGS) -MT memcheck_ppc32_linux-mc_translate.obj -MD -MP -MF "$(DEPDIR)/memcheck_ppc32_linux-mc_translate.Tpo" -c -o memcheck_ppc32_linux-mc_translate.obj `if test -f 'mc_translate.c'; then $(CYGPATH_W) 'mc_translate.c'; else $(CYGPATH_W) '$(srcdir)/mc_translate.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/memcheck_ppc32_linux-mc_translate.Tpo" "$(DEPDIR)/memcheck_ppc32_linux-mc_translate.Po"; else rm -f "$(DEPDIR)/memcheck_ppc32_linux-mc_translate.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='mc_translate.c' object='memcheck_ppc32_linux-mc_translate.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_ppc32_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_ppc32_linux_CFLAGS) $(CFLAGS) -c -o memcheck_ppc32_linux-mc_translate.obj `if test -f 'mc_translate.c'; then $(CYGPATH_W) 'mc_translate.c'; else $(CYGPATH_W) '$(srcdir)/mc_translate.c'; fi`

memcheck_x86_linux-mac_leakcheck.o: mac_leakcheck.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_x86_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_x86_linux_CFLAGS) $(CFLAGS) -MT memcheck_x86_linux-mac_leakcheck.o -MD -MP -MF "$(DEPDIR)/memcheck_x86_linux-mac_leakcheck.Tpo" -c -o memcheck_x86_linux-mac_leakcheck.o `test -f 'mac_leakcheck.c' || echo '$(srcdir)/'`mac_leakcheck.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/memcheck_x86_linux-mac_leakcheck.Tpo" "$(DEPDIR)/memcheck_x86_linux-mac_leakcheck.Po"; else rm -f "$(DEPDIR)/memcheck_x86_linux-mac_leakcheck.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='mac_leakcheck.c' object='memcheck_x86_linux-mac_leakcheck.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_x86_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_x86_linux_CFLAGS) $(CFLAGS) -c -o memcheck_x86_linux-mac_leakcheck.o `test -f 'mac_leakcheck.c' || echo '$(srcdir)/'`mac_leakcheck.c

memcheck_x86_linux-mac_leakcheck.obj: mac_leakcheck.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_x86_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_x86_linux_CFLAGS) $(CFLAGS) -MT memcheck_x86_linux-mac_leakcheck.obj -MD -MP -MF "$(DEPDIR)/memcheck_x86_linux-mac_leakcheck.Tpo" -c -o memcheck_x86_linux-mac_leakcheck.obj `if test -f 'mac_leakcheck.c'; then $(CYGPATH_W) 'mac_leakcheck.c'; else $(CYGPATH_W) '$(srcdir)/mac_leakcheck.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/memcheck_x86_linux-mac_leakcheck.Tpo" "$(DEPDIR)/memcheck_x86_linux-mac_leakcheck.Po"; else rm -f "$(DEPDIR)/memcheck_x86_linux-mac_leakcheck.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='mac_leakcheck.c' object='memcheck_x86_linux-mac_leakcheck.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_x86_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_x86_linux_CFLAGS) $(CFLAGS) -c -o memcheck_x86_linux-mac_leakcheck.obj `if test -f 'mac_leakcheck.c'; then $(CYGPATH_W) 'mac_leakcheck.c'; else $(CYGPATH_W) '$(srcdir)/mac_leakcheck.c'; fi`

memcheck_x86_linux-mac_malloc_wrappers.o: mac_malloc_wrappers.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_x86_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_x86_linux_CFLAGS) $(CFLAGS) -MT memcheck_x86_linux-mac_malloc_wrappers.o -MD -MP -MF "$(DEPDIR)/memcheck_x86_linux-mac_malloc_wrappers.Tpo" -c -o memcheck_x86_linux-mac_malloc_wrappers.o `test -f 'mac_malloc_wrappers.c' || echo '$(srcdir)/'`mac_malloc_wrappers.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/memcheck_x86_linux-mac_malloc_wrappers.Tpo" "$(DEPDIR)/memcheck_x86_linux-mac_malloc_wrappers.Po"; else rm -f "$(DEPDIR)/memcheck_x86_linux-mac_malloc_wrappers.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='mac_malloc_wrappers.c' object='memcheck_x86_linux-mac_malloc_wrappers.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_x86_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_x86_linux_CFLAGS) $(CFLAGS) -c -o memcheck_x86_linux-mac_malloc_wrappers.o `test -f 'mac_malloc_wrappers.c' || echo '$(srcdir)/'`mac_malloc_wrappers.c

memcheck_x86_linux-mac_malloc_wrappers.obj: mac_malloc_wrappers.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_x86_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_x86_linux_CFLAGS) $(CFLAGS) -MT memcheck_x86_linux-mac_malloc_wrappers.obj -MD -MP -MF "$(DEPDIR)/memcheck_x86_linux-mac_malloc_wrappers.Tpo" -c -o memcheck_x86_linux-mac_malloc_wrappers.obj `if test -f 'mac_malloc_wrappers.c'; then $(CYGPATH_W) 'mac_malloc_wrappers.c'; else $(CYGPATH_W) '$(srcdir)/mac_malloc_wrappers.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/memcheck_x86_linux-mac_malloc_wrappers.Tpo" "$(DEPDIR)/memcheck_x86_linux-mac_malloc_wrappers.Po"; else rm -f "$(DEPDIR)/memcheck_x86_linux-mac_malloc_wrappers.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='mac_malloc_wrappers.c' object='memcheck_x86_linux-mac_malloc_wrappers.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_x86_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_x86_linux_CFLAGS) $(CFLAGS) -c -o memcheck_x86_linux-mac_malloc_wrappers.obj `if test -f 'mac_malloc_wrappers.c'; then $(CYGPATH_W) 'mac_malloc_wrappers.c'; else $(CYGPATH_W) '$(srcdir)/mac_malloc_wrappers.c'; fi`

memcheck_x86_linux-mc_main.o: mc_main.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_x86_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_x86_linux_CFLAGS) $(CFLAGS) -MT memcheck_x86_linux-mc_main.o -MD -MP -MF "$(DEPDIR)/memcheck_x86_linux-mc_main.Tpo" -c -o memcheck_x86_linux-mc_main.o `test -f 'mc_main.c' || echo '$(srcdir)/'`mc_main.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/memcheck_x86_linux-mc_main.Tpo" "$(DEPDIR)/memcheck_x86_linux-mc_main.Po"; else rm -f "$(DEPDIR)/memcheck_x86_linux-mc_main.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='mc_main.c' object='memcheck_x86_linux-mc_main.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_x86_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_x86_linux_CFLAGS) $(CFLAGS) -c -o memcheck_x86_linux-mc_main.o `test -f 'mc_main.c' || echo '$(srcdir)/'`mc_main.c

memcheck_x86_linux-mc_main.obj: mc_main.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_x86_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_x86_linux_CFLAGS) $(CFLAGS) -MT memcheck_x86_linux-mc_main.obj -MD -MP -MF "$(DEPDIR)/memcheck_x86_linux-mc_main.Tpo" -c -o memcheck_x86_linux-mc_main.obj `if test -f 'mc_main.c'; then $(CYGPATH_W) 'mc_main.c'; else $(CYGPATH_W) '$(srcdir)/mc_main.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/memcheck_x86_linux-mc_main.Tpo" "$(DEPDIR)/memcheck_x86_linux-mc_main.Po"; else rm -f "$(DEPDIR)/memcheck_x86_linux-mc_main.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='mc_main.c' object='memcheck_x86_linux-mc_main.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_x86_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_x86_linux_CFLAGS) $(CFLAGS) -c -o memcheck_x86_linux-mc_main.obj `if test -f 'mc_main.c'; then $(CYGPATH_W) 'mc_main.c'; else $(CYGPATH_W) '$(srcdir)/mc_main.c'; fi`

memcheck_x86_linux-mac_shared.o: mac_shared.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_x86_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_x86_linux_CFLAGS) $(CFLAGS) -MT memcheck_x86_linux-mac_shared.o -MD -MP -MF "$(DEPDIR)/memcheck_x86_linux-mac_shared.Tpo" -c -o memcheck_x86_linux-mac_shared.o `test -f 'mac_shared.c' || echo '$(srcdir)/'`mac_shared.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/memcheck_x86_linux-mac_shared.Tpo" "$(DEPDIR)/memcheck_x86_linux-mac_shared.Po"; else rm -f "$(DEPDIR)/memcheck_x86_linux-mac_shared.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='mac_shared.c' object='memcheck_x86_linux-mac_shared.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_x86_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_x86_linux_CFLAGS) $(CFLAGS) -c -o memcheck_x86_linux-mac_shared.o `test -f 'mac_shared.c' || echo '$(srcdir)/'`mac_shared.c

memcheck_x86_linux-mac_shared.obj: mac_shared.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_x86_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_x86_linux_CFLAGS) $(CFLAGS) -MT memcheck_x86_linux-mac_shared.obj -MD -MP -MF "$(DEPDIR)/memcheck_x86_linux-mac_shared.Tpo" -c -o memcheck_x86_linux-mac_shared.obj `if test -f 'mac_shared.c'; then $(CYGPATH_W) 'mac_shared.c'; else $(CYGPATH_W) '$(srcdir)/mac_shared.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/memcheck_x86_linux-mac_shared.Tpo" "$(DEPDIR)/memcheck_x86_linux-mac_shared.Po"; else rm -f "$(DEPDIR)/memcheck_x86_linux-mac_shared.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='mac_shared.c' object='memcheck_x86_linux-mac_shared.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_x86_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_x86_linux_CFLAGS) $(CFLAGS) -c -o memcheck_x86_linux-mac_shared.obj `if test -f 'mac_shared.c'; then $(CYGPATH_W) 'mac_shared.c'; else $(CYGPATH_W) '$(srcdir)/mac_shared.c'; fi`

memcheck_x86_linux-mc_translate.o: mc_translate.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_x86_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_x86_linux_CFLAGS) $(CFLAGS) -MT memcheck_x86_linux-mc_translate.o -MD -MP -MF "$(DEPDIR)/memcheck_x86_linux-mc_translate.Tpo" -c -o memcheck_x86_linux-mc_translate.o `test -f 'mc_translate.c' || echo '$(srcdir)/'`mc_translate.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/memcheck_x86_linux-mc_translate.Tpo" "$(DEPDIR)/memcheck_x86_linux-mc_translate.Po"; else rm -f "$(DEPDIR)/memcheck_x86_linux-mc_translate.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='mc_translate.c' object='memcheck_x86_linux-mc_translate.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_x86_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_x86_linux_CFLAGS) $(CFLAGS) -c -o memcheck_x86_linux-mc_translate.o `test -f 'mc_translate.c' || echo '$(srcdir)/'`mc_translate.c

memcheck_x86_linux-mc_translate.obj: mc_translate.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_x86_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_x86_linux_CFLAGS) $(CFLAGS) -MT memcheck_x86_linux-mc_translate.obj -MD -MP -MF "$(DEPDIR)/memcheck_x86_linux-mc_translate.Tpo" -c -o memcheck_x86_linux-mc_translate.obj `if test -f 'mc_translate.c'; then $(CYGPATH_W) 'mc_translate.c'; else $(CYGPATH_W) '$(srcdir)/mc_translate.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/memcheck_x86_linux-mc_translate.Tpo" "$(DEPDIR)/memcheck_x86_linux-mc_translate.Po"; else rm -f "$(DEPDIR)/memcheck_x86_linux-mc_translate.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='mc_translate.c' object='memcheck_x86_linux-mc_translate.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_x86_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_x86_linux_CFLAGS) $(CFLAGS) -c -o memcheck_x86_linux-mc_translate.obj `if test -f 'mc_translate.c'; then $(CYGPATH_W) 'mc_translate.c'; else $(CYGPATH_W) '$(srcdir)/mc_translate.c'; fi`

vgpreload_memcheck_amd64_linux_so-mac_replace_strmem.o: mac_replace_strmem.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vgpreload_memcheck_amd64_linux_so_CPPFLAGS) $(CPPFLAGS) $(vgpreload_memcheck_amd64_linux_so_CFLAGS) $(CFLAGS) -MT vgpreload_memcheck_amd64_linux_so-mac_replace_strmem.o -MD -MP -MF "$(DEPDIR)/vgpreload_memcheck_amd64_linux_so-mac_replace_strmem.Tpo" -c -o vgpreload_memcheck_amd64_linux_so-mac_replace_strmem.o `test -f 'mac_replace_strmem.c' || echo '$(srcdir)/'`mac_replace_strmem.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/vgpreload_memcheck_amd64_linux_so-mac_replace_strmem.Tpo" "$(DEPDIR)/vgpreload_memcheck_amd64_linux_so-mac_replace_strmem.Po"; else rm -f "$(DEPDIR)/vgpreload_memcheck_amd64_linux_so-mac_replace_strmem.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='mac_replace_strmem.c' object='vgpreload_memcheck_amd64_linux_so-mac_replace_strmem.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vgpreload_memcheck_amd64_linux_so_CPPFLAGS) $(CPPFLAGS) $(vgpreload_memcheck_amd64_linux_so_CFLAGS) $(CFLAGS) -c -o vgpreload_memcheck_amd64_linux_so-mac_replace_strmem.o `test -f 'mac_replace_strmem.c' || echo '$(srcdir)/'`mac_replace_strmem.c

vgpreload_memcheck_amd64_linux_so-mac_replace_strmem.obj: mac_replace_strmem.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vgpreload_memcheck_amd64_linux_so_CPPFLAGS) $(CPPFLAGS) $(vgpreload_memcheck_amd64_linux_so_CFLAGS) $(CFLAGS) -MT vgpreload_memcheck_amd64_linux_so-mac_replace_strmem.obj -MD -MP -MF "$(DEPDIR)/vgpreload_memcheck_amd64_linux_so-mac_replace_strmem.Tpo" -c -o vgpreload_memcheck_amd64_linux_so-mac_replace_strmem.obj `if test -f 'mac_replace_strmem.c'; then $(CYGPATH_W) 'mac_replace_strmem.c'; else $(CYGPATH_W) '$(srcdir)/mac_replace_strmem.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/vgpreload_memcheck_amd64_linux_so-mac_replace_strmem.Tpo" "$(DEPDIR)/vgpreload_memcheck_amd64_linux_so-mac_replace_strmem.Po"; else rm -f "$(DEPDIR)/vgpreload_memcheck_amd64_linux_so-mac_replace_strmem.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='mac_replace_strmem.c' object='vgpreload_memcheck_amd64_linux_so-mac_replace_strmem.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vgpreload_memcheck_amd64_linux_so_CPPFLAGS) $(CPPFLAGS) $(vgpreload_memcheck_amd64_linux_so_CFLAGS) $(CFLAGS) -c -o vgpreload_memcheck_amd64_linux_so-mac_replace_strmem.obj `if test -f 'mac_replace_strmem.c'; then $(CYGPATH_W) 'mac_replace_strmem.c'; else $(CYGPATH_W) '$(srcdir)/mac_replace_strmem.c'; fi`

vgpreload_memcheck_ppc32_linux_so-mac_replace_strmem.o: mac_replace_strmem.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vgpreload_memcheck_ppc32_linux_so_CPPFLAGS) $(CPPFLAGS) $(vgpreload_memcheck_ppc32_linux_so_CFLAGS) $(CFLAGS) -MT vgpreload_memcheck_ppc32_linux_so-mac_replace_strmem.o -MD -MP -MF "$(DEPDIR)/vgpreload_memcheck_ppc32_linux_so-mac_replace_strmem.Tpo" -c -o vgpreload_memcheck_ppc32_linux_so-mac_replace_strmem.o `test -f 'mac_replace_strmem.c' || echo '$(srcdir)/'`mac_replace_strmem.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/vgpreload_memcheck_ppc32_linux_so-mac_replace_strmem.Tpo" "$(DEPDIR)/vgpreload_memcheck_ppc32_linux_so-mac_replace_strmem.Po"; else rm -f "$(DEPDIR)/vgpreload_memcheck_ppc32_linux_so-mac_replace_strmem.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='mac_replace_strmem.c' object='vgpreload_memcheck_ppc32_linux_so-mac_replace_strmem.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vgpreload_memcheck_ppc32_linux_so_CPPFLAGS) $(CPPFLAGS) $(vgpreload_memcheck_ppc32_linux_so_CFLAGS) $(CFLAGS) -c -o vgpreload_memcheck_ppc32_linux_so-mac_replace_strmem.o `test -f 'mac_replace_strmem.c' || echo '$(srcdir)/'`mac_replace_strmem.c

vgpreload_memcheck_ppc32_linux_so-mac_replace_strmem.obj: mac_replace_strmem.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vgpreload_memcheck_ppc32_linux_so_CPPFLAGS) $(CPPFLAGS) $(vgpreload_memcheck_ppc32_linux_so_CFLAGS) $(CFLAGS) -MT vgpreload_memcheck_ppc32_linux_so-mac_replace_strmem.obj -MD -MP -MF "$(DEPDIR)/vgpreload_memcheck_ppc32_linux_so-mac_replace_strmem.Tpo" -c -o vgpreload_memcheck_ppc32_linux_so-mac_replace_strmem.obj `if test -f 'mac_replace_strmem.c'; then $(CYGPATH_W) 'mac_replace_strmem.c'; else $(CYGPATH_W) '$(srcdir)/mac_replace_strmem.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/vgpreload_memcheck_ppc32_linux_so-mac_replace_strmem.Tpo" "$(DEPDIR)/vgpreload_memcheck_ppc32_linux_so-mac_replace_strmem.Po"; else rm -f "$(DEPDIR)/vgpreload_memcheck_ppc32_linux_so-mac_replace_strmem.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='mac_replace_strmem.c' object='vgpreload_memcheck_ppc32_linux_so-mac_replace_strmem.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vgpreload_memcheck_ppc32_linux_so_CPPFLAGS) $(CPPFLAGS) $(vgpreload_memcheck_ppc32_linux_so_CFLAGS) $(CFLAGS) -c -o vgpreload_memcheck_ppc32_linux_so-mac_replace_strmem.obj `if test -f 'mac_replace_strmem.c'; then $(CYGPATH_W) 'mac_replace_strmem.c'; else $(CYGPATH_W) '$(srcdir)/mac_replace_strmem.c'; fi`

vgpreload_memcheck_x86_linux_so-mac_replace_strmem.o: mac_replace_strmem.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vgpreload_memcheck_x86_linux_so_CPPFLAGS) $(CPPFLAGS) $(vgpreload_memcheck_x86_linux_so_CFLAGS) $(CFLAGS) -MT vgpreload_memcheck_x86_linux_so-mac_replace_strmem.o -MD -MP -MF "$(DEPDIR)/vgpreload_memcheck_x86_linux_so-mac_replace_strmem.Tpo" -c -o vgpreload_memcheck_x86_linux_so-mac_replace_strmem.o `test -f 'mac_replace_strmem.c' || echo '$(srcdir)/'`mac_replace_strmem.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/vgpreload_memcheck_x86_linux_so-mac_replace_strmem.Tpo" "$(DEPDIR)/vgpreload_memcheck_x86_linux_so-mac_replace_strmem.Po"; else rm -f "$(DEPDIR)/vgpreload_memcheck_x86_linux_so-mac_replace_strmem.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='mac_replace_strmem.c' object='vgpreload_memcheck_x86_linux_so-mac_replace_strmem.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vgpreload_memcheck_x86_linux_so_CPPFLAGS) $(CPPFLAGS) $(vgpreload_memcheck_x86_linux_so_CFLAGS) $(CFLAGS) -c -o vgpreload_memcheck_x86_linux_so-mac_replace_strmem.o `test -f 'mac_replace_strmem.c' || echo '$(srcdir)/'`mac_replace_strmem.c

vgpreload_memcheck_x86_linux_so-mac_replace_strmem.obj: mac_replace_strmem.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vgpreload_memcheck_x86_linux_so_CPPFLAGS) $(CPPFLAGS) $(vgpreload_memcheck_x86_linux_so_CFLAGS) $(CFLAGS) -MT vgpreload_memcheck_x86_linux_so-mac_replace_strmem.obj -MD -MP -MF "$(DEPDIR)/vgpreload_memcheck_x86_linux_so-mac_replace_strmem.Tpo" -c -o vgpreload_memcheck_x86_linux_so-mac_replace_strmem.obj `if test -f 'mac_replace_strmem.c'; then $(CYGPATH_W) 'mac_replace_strmem.c'; else $(CYGPATH_W) '$(srcdir)/mac_replace_strmem.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/vgpreload_memcheck_x86_linux_so-mac_replace_strmem.Tpo" "$(DEPDIR)/vgpreload_memcheck_x86_linux_so-mac_replace_strmem.Po"; else rm -f "$(DEPDIR)/vgpreload_memcheck_x86_linux_so-mac_replace_strmem.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='mac_replace_strmem.c' object='vgpreload_memcheck_x86_linux_so-mac_replace_strmem.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vgpreload_memcheck_x86_linux_so_CPPFLAGS) $(CPPFLAGS) $(vgpreload_memcheck_x86_linux_so_CFLAGS) $(CFLAGS) -c -o vgpreload_memcheck_x86_linux_so-mac_replace_strmem.obj `if test -f 'mac_replace_strmem.c'; then $(CYGPATH_W) 'mac_replace_strmem.c'; else $(CYGPATH_W) '$(srcdir)/mac_replace_strmem.c'; fi`
uninstall-info-am:
install-mcincludeHEADERS: $(mcinclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(mcincludedir)" || $(mkdir_p) "$(DESTDIR)$(mcincludedir)"
	@list='$(mcinclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(mcincludeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(mcincludedir)/$$f'"; \
	  $(mcincludeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(mcincludedir)/$$f"; \
	done

uninstall-mcincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(mcinclude_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(mcincludedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(mcincludedir)/$$f"; \
	done

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(mkdir_p) $(distdir)/..
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(mkdir_p) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(PROGRAMS) $(HEADERS) all-local
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(mcincludedir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-generic clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

install-data-am: install-mcincludeHEADERS

install-exec-am: install-exec-local

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-info-am uninstall-mcincludeHEADERS

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am all-local check \
	check-am clean clean-generic clean-noinstPROGRAMS \
	clean-recursive ctags ctags-recursive distclean \
	distclean-compile distclean-generic distclean-recursive \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-exec \
	install-exec-am install-exec-local install-info \
	install-info-am install-man install-mcincludeHEADERS \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	maintainer-clean-recursive mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-recursive pdf pdf-am ps ps-am \
	tags tags-recursive uninstall uninstall-am uninstall-info-am \
	uninstall-mcincludeHEADERS


# The kludge that passes for vex's build system can't handle parallel
# builds.  So, for the time being, serialise all Valgrind building.
# (this is equivalent to enforcing "make -j 1".
.NOTPARALLEL:

install-exec-local:
	for f in $(noinst_PROGRAMS); do \
	  p=`echo $$f | sed -e 's/^[^-]*-//' -e 's/\..*$$//'`; \
	  n=`echo $$f | sed -e 's/-[^-]\{1,\}-[^-.]\{1,\}//'`; \
	  $(mkinstalldirs) $(DESTDIR)$(valdir)/$$p; \
	  $(INSTALL_PROGRAM) $$f $(DESTDIR)$(valdir)/$$p/$$n; \
	done ; \
	for f in $(noinst_LIBRARIES); do \
	  if expr match $$f libcoregrind_ > /dev/null ; then \
	    pU=`echo $$f | sed -e 's/libcoregrind_//g' -e 's/\.a//g'` ; \
	    pD=`echo $$pU | sed -e 's/_/-/g'` ; \
	    $(INSTALL_DATA) $$f $(DESTDIR)$(valdir)/$$pD/libcoregrind.a ; \
	    $(INSTALL_DATA) @VEX_DIR@/libvex_$$pU.a $(DESTDIR)$(valdir)/$$pD/libvex.a ; \
	  fi ; \
	done
all-local:
	for f in $(noinst_PROGRAMS); do \
	  p=`echo $$f | sed -e 's/^[^-]*-//' -e 's/\..*$$//'`; \
	  n=`echo $$f | sed -e 's/-[^-]\{1,\}-[^-.]\{1,\}//'`; \
	  mkdir -p $(inplacedir)/$$p; \
	  rm -f $(inplacedir)/$$p/$$n; \
	  ln -f -s ../../$(subdir)/$$f $(inplacedir)/$$p/$$n; \
	done

@VEX_DIR@/libvex_x86_linux.a: @VEX_DIR@/priv/main/vex_svnversion.h
	$(MAKE) -C @VEX_DIR@ CC="$(CC)" libvex_x86_linux.a EXTRA_CFLAGS="$(AM_CFLAGS_X86_LINUX)"

@VEX_DIR@/libvex_amd64_linux.a: @VEX_DIR@/priv/main/vex_svnversion.h
	$(MAKE) -C @VEX_DIR@ CC="$(CC)" libvex_amd64_linux.a EXTRA_CFLAGS="$(AM_CFLAGS_AMD64_LINUX)"

@VEX_DIR@/libvex_ppc32_linux.a: @VEX_DIR@/priv/main/vex_svnversion.h
	$(MAKE) -C @VEX_DIR@ CC="$(CC)" libvex_ppc32_linux.a EXTRA_CFLAGS="$(AM_CFLAGS_PPC32_LINUX)"

@VEX_DIR@/priv/main/vex_svnversion.h:
	$(MAKE) -C @VEX_DIR@ CC="$(CC)" version

mac_replace_strmem.o: CFLAGS += -fno-omit-frame-pointer

mc_main.o: CFLAGS += -fomit-frame-pointer
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
