# This is a generated file, composed of the following suppression rules:
#
#      xfree-3.supp xfree-4.supp glibc-2.34567-NPTL-helgrind.supp glibc-2.3.supp 
#


##----------------------------------------------------------------------##

# Errors to suppress by default with XFree86 3.3.6)

# Format of this file is:
# {
#     name_of_suppression
#     tool_name:supp_kind
#     (optional extra info for some suppression types)
#     caller0 name, or /name/of/so/file.so
#     caller1 name, or ditto
#     (optionally: caller2 name)
#     (optionally: caller3 name)
#  }
#
# For Memcheck, the supp_kinds are:
#
#     Param Value1 Value2 Value4 Value8 Value16 Jump
#     Free Addr1 Addr2 Addr4 Addr8 Addr16
#     Cond (previously known as Value0)
#
# and the optional extra info is:
#     if Param: name of system call param

##----------------------------------------------------------------------##

{
   X11-Cond-0
   Memcheck:Cond
   obj:*libXt.so.6.0
   obj:*libXt.so.6.0
   obj:*libXt.so.6.0
}
{
   X11-Cond-1
   Memcheck:Cond
   fun:__rawmemchr
   obj:*libXt.so.6.0
   obj:*libXt.so.6.0
}


# Suppressions for XFree86-3.3.X

{
   X11-Addr4-1
   Memcheck:Addr4
   obj:/usr/X11R6/lib/libX11.so.6.1
   obj:/usr/X11R6/lib/libX11.so.6.1
   obj:/usr/X11R6/lib/libX11.so.6.1
}

{
   X11-Addr4-2
   Memcheck:Addr4
   obj:/usr/X11R6/lib/libX11.so.6.1
   obj:/usr/X11R6/lib/libX11.so.6.1
   obj:/usr/X11R6/lib/libXt.so.6.0
}

{
   X11-Addr4-3
   Memcheck:Addr4
   obj:/usr/X11R6/lib/libXt.so.6.0
   obj:/usr/X11R6/lib/libXt.so.6.0
   obj:/usr/X11R6/lib/libXt.so.6.0
}

{
   X11-Addr4-4
   Memcheck:Addr4
   obj:/usr/X11R6/lib/libX11.so.6.1
   obj:/usr/X11R6/lib/libXt.so.6.0
   obj:/usr/X11R6/lib/libXt.so.6.0
}

{
   X11-Addr4-5
   Memcheck:Addr4
   fun:__rawmemchr
   obj:/usr/X11R6/lib/libXt.so.6.0
   obj:/usr/X11R6/lib/libXt.so.6.0
}

{
   X11-Addr4-6
   Memcheck:Addr4
   obj:/usr/X11R6/lib/libXmu.so.6.0
   obj:/usr/X11R6/lib/libXmu.so.6.0
   obj:/usr/X11R6/lib/libXt.so.6.0
}

{
   X11-Addr4-7
   Memcheck:Addr4
   obj:/usr/X11R6/lib/libXt.so.6.0
   obj:/usr/X11R6/lib/libXt.so.6.0
   obj:/usr/X11R6/lib/libXawXpm_posing_as_Xaw.so.6.1
}

{
   X11-Param-1
   Memcheck:Param
   write(buf)
   fun:__libc_write
   obj:/usr/X11R6/lib/libX11.so.6.1
   obj:/usr/X11R6/lib/libX11.so.6.1
}

{
   X11-Addr4-8
   Memcheck:Addr4
   obj:/usr/X11R6/lib/libX11.so.6.1
   obj:/usr/X11R6/lib/libXpm.so.4.11
   obj:/usr/X11R6/lib/libXpm.so.4.11
}

{
   X11-Addr4-8
   Memcheck:Addr4
   obj:/usr/X11R6/lib/libXt.so.6.0
   obj:/usr/X11R6/lib/libXawXpm_posing_as_Xaw.so.6.1
   obj:/usr/X11R6/lib/libXt.so.6.0
}

{
   X11-Addr4-9
   Memcheck:Addr4
   obj:/usr/X11R6/lib/libXaw.so.6.1
   obj:/usr/X11R6/lib/libXt.so.6.0
   obj:/usr/X11R6/lib/libXt.so.6.0
}

{
   X11-Addr4-10
   Memcheck:Addr4
   obj:/usr/X11R6/lib/libXaw.so.6.1
   obj:/usr/X11R6/lib/libXaw.so.6.1
   obj:/usr/X11R6/lib/libXt.so.6.0
}

{
   X11-Addr4-11
   Memcheck:Addr4
   obj:/usr/X11R6/lib/libXt.so.6.0
   obj:/usr/X11R6/lib/libXt.so.6.0
   obj:/usr/X11R6/lib/libXaw.so.6.1
}



##----------------------------------------------------------------------##

##----------------------------------------------------------------------##

# Errors to suppress by default with XFree86 4.1.0)

# Format of this file is:
# {
#     name_of_suppression
#     tool_name:supp_kind
#     (optional extra info for some suppression types)
#     caller0 name, or /name/of/so/file.so
#     caller1 name, or ditto
#     (optionally: caller2 name)
#     (optionally: caller3 name)
#  }
#
# For Memcheck, the supp_kinds are:
#
#     Param Value1 Value2 Value4 Value8 Value16 Jump
#     Free Addr1 Addr2 Addr4 Addr8 Addr16
#     Cond (previously known as Value0)
#
# and the optional extra info is:
#     if Param: name of system call param

# Resulting from R H 8.0
{
   *libc_write/libX11.so.6.2/*X11TransWrite(Param)
   Memcheck:Param
   write(buf)
   fun:*libc_write
   obj:/usr/X11R6/lib*/libX11.so.6.2
   fun:*X11TransWrite
}

{
   libX11.so.6.2/libX11.so.6.2/libX11.so.6.2(Cond)
   Memcheck:Cond
   obj:/usr/X11R6/lib*/libX11.so.6.2
   obj:/usr/X11R6/lib*/libX11.so.6.2
   obj:/usr/X11R6/lib*/libX11.so.6.2
}

{
   libXt.so.6.2/libXt.so.6.2/libXt.so.6.2(Cond)
   Memcheck:Cond
   obj:/usr/X11R6/lib*/libXt.so.6.0
   obj:/usr/X11R6/lib*/libXt.so.6.0
   obj:/usr/X11R6/lib*/libXt.so.6.0
}


{
   libXaw.so.7.0/libXaw.so.7.0/libXaw.so.7.0(Cond)
   Memcheck:Cond
   obj:/usr/X11R6/lib*/libXaw.so.7.0
   obj:/usr/X11R6/lib*/libXaw.so.7.0
   obj:/usr/X11R6/lib*/libXaw.so.7.0
}

{
   libXmu.so.6.2/libXmu.so.6.2/libXmu.so.6.2(Cond)
   Memcheck:Cond
   obj:/usr/X11R6/lib*/libXmu.so.6.2
   obj:/usr/X11R6/lib*/libXmu.so.6.2
   obj:/usr/X11R6/lib*/libXmu.so.6.2
}

{
   libXt.so.6.0/libXt.so.6.0/libXaw.so.7.0(Cond)
   Memcheck:Cond
   obj:/usr/X11R6/lib*/libXt.so.6.0
   obj:/usr/X11R6/lib*/libXt.so.6.0
   obj:/usr/X11R6/lib*/libXaw.so.7.0
}

{
   libXaw.so.7.0/libXaw.so.7.0/libXt.so.6.0(Value4)
   Memcheck:Value4
   obj:/usr/X11R6/lib*/libXaw.so.7.0
   obj:/usr/X11R6/lib*/libXaw.so.7.0
   obj:/usr/X11R6/lib*/libXt.so.6.0
}

{
   libXaw.so.7.0/libXaw.so.7.0/libXt.so.6.0(Cond)
   Memcheck:Cond
   obj:/usr/X11R6/lib*/libXaw.so.7.0
   obj:/usr/X11R6/lib*/libXaw.so.7.0
   obj:/usr/X11R6/lib*/libXt.so.6.0
}

{
   libX11.so.6.2/libX11.so.6.2/libXaw.so.7.0(Cond)
   Memcheck:Cond
   obj:/usr/X11R6/lib*/libX11.so.6.2
   obj:/usr/X11R6/lib*/libX11.so.6.2
   obj:/usr/X11R6/lib*/libXaw.so.7.0
}

{
   libX11.so.6.2/libX11.so.6.2/libXaw.so.7.0(Addr4)
   Memcheck:Addr4
   obj:/usr/X11R6/lib*/libX11.so.6.2
   obj:/usr/X11R6/lib*/libX11.so.6.2
   obj:/usr/X11R6/lib*/libXaw.so.7.0
}

{
   libX11.so.6.2/libXaw.so.7.0/libXaw.so.7.0(Cond)
   Memcheck:Cond
   obj:/usr/X11R6/lib*/libX11.so.6.2
   obj:/usr/X11R6/lib*/libXaw.so.7.0
   obj:/usr/X11R6/lib*/libXaw.so.7.0
}

{
   libXpm.so.4.11/libXpm.so.4.11/libXpm.so.4.11
   Memcheck:Cond
   obj:/usr/X11R6/lib*/libXpm.so.4.11
   obj:/usr/X11R6/lib*/libXpm.so.4.11
   obj:/usr/X11R6/lib*/libXpm.so.4.11
}

{
   struct with uninitialized paddings
   Memcheck:Param
   writev(vector[...])
   fun:*_writev
   fun:_X11TransSocketWritev
   fun:_X11TransWritev
   fun:*
}

{
   struct with uninitialized paddings - libxcb
   Memcheck:Param
   writev(vector[...])
   obj:/lib*/libc-2.6*.so
   obj:/usr/lib*/libxcb.so.1.0.0
   obj:/usr/lib*/libxcb.so.1.0.0
   fun:xcb_send_request
   fun:_X*
}

{
   struct with uninitialized paddings - libxcb
   Memcheck:Param
   writev(vector[...])
   obj:/lib*/libc-2.6*.so
   obj:/usr/lib*/libxcb.so.1.0.0
   obj:/usr/lib*/libxcb.so.1.0.0
   obj:/usr/lib*/libxcb.so.1.0.0
   fun:xcb_*
   fun:_X*
}

{
   another struct with uninitialized paddings
   Memcheck:Param
   write(buf)
   obj:*
   fun:_IceTransSocketWrite
   fun:_IceTransWrite
   fun:_IceWrite
}

{
   Xorg 6.8.1 uninit _write* padding
   Memcheck:Param
   write(buf)
   fun:*
   fun:_X11TransWrite
   obj:/usr/X11R6/lib*/libX11.so.6.2
}

{
   Xorg 6.8.1 uninit write padding
   Memcheck:Param
   write(buf)
   fun:write
   fun:_X11TransWrite
   obj:/usr/X11R6/lib*/libX11.so.6.2
}

{
   Xorg 6.8.1 ICE uninit __write* padding
   Memcheck:Param
   write(buf)
   obj:*
   fun:_IceTransWrite
   fun:_IceWrite
   fun:IceFlush
}

{
   Xorg 6.8.1 writev uninit padding
   Memcheck:Param
   writev(vector[...])
   fun:writev
   obj:/usr/X11R6/lib*/libX11.so.6.2
   fun:_X11TransWritev
   fun:_XSend
}

{
   Xorg 6.9.0 writev uninit padding
   Memcheck:Param
   writev(vector[...])
   fun:do_writev
   fun:writev
   obj:/usr/X11R6/lib*/libX11.so.6.2
   fun:_X11TransWritev
   fun:_XSend
}



# There's something strange about a % 127 in XftFontOpenInfo
# (hashing) which gcc turns into a multiply by 33818641 and
# some other guff instead.  I don't understand it enough to
# know if libXft is broken or if memcheck's value tracking is
# inadequate here.  Anyway, for the moment, suppress it.
#
# Use of uninitialised value of size 8
#   at 0x71A59F8: XftFontOpenInfo (in /usr/X11R6/lib64/libXft.so.2.1.2)
#   by 0x71A5F0D: XftFontOpenPattern (in /usr/X11R6/lib64/libXft.so.2.1.2)
#   by 0x65F166E: loadFontConfigFont(QFontPrivate const*, QFontDef const&, 
#                 QFont::Script) (qfontdatabase_x11.cpp:1942)
#   by 0x65F5DE4: QFontDatabase::findFont(QFont::Script, QFontPrivate const*,
#                 QFontDef const&, int) (qfontdatabase.cpp:996)
{
   XftFontOpenInfo-umod-127-strangeness
   Memcheck:Value8
   obj:/usr/X11*/lib*/libXft.so*
   obj:/usr/X11*/lib*/libXft.so*
}
{
   XftFontOpenInfo-umod-127-strangeness-a-la-xorg
   Memcheck:Value8
   obj:/usr/lib*/libXft.so*
   obj:/usr/lib*/libXft.so*
}

{
   More X padding stuff
   Memcheck:Param
   writev(vector[...])
   fun:*writev*
   obj:/usr/X11*/lib*/libX11.so*
   obj:/usr/X11*/lib*/libX11.so*
}


##----------------------------------------------------------------------##
# Completely inappropriate place, but ...

{
   ifort-9.X-on-i686-1
   Memcheck:Addr4
   fun:unaligned_bigint
   fun:hash
   fun:for__add_to_lf_table
}
{
   ifort-9.X-on-amd64-1
   Memcheck:Addr8
   fun:unaligned_bigint
   fun:hash
   fun:for__add_to_lf_table
}

##----------------------------------------------------------------------##


##----------------------------------------------------------------------##
# Suppressions for the Helgrind tool when using 
# a glibc-2.{2,3,4,5,6} system

######------------ glibc-2.5 specific ------------######
#
## NB.  This is the "reference set".  Derived sets for
## glibc 2.7, 2.6, 2.4 and 2.3 follow below.
{
   helgrind-glibc25-001
   Helgrind:Race
   obj:/lib*/ld-2.5.*so
   obj:/lib*/ld-2.5.*so
}
{
   helgrind-glibc25-002
   Helgrind:Race
   obj:/lib*/ld-2.5.*so
   obj:/lib*/libc-2.5.*so
   obj:/lib*/ld-2.5.*so
}
{
   helgrind-glibc25-003
   Helgrind:Race
   obj:/lib*/ld-2.5.*so
   obj:/lib*/libc-2.5.*so
   obj:/lib*/libc-2.5.*so
}
{
   helgrind-glibc25-004
   Helgrind:Race
   obj:/lib*/libc-2.5.*so
   obj:/lib*/libc-2.5.*so
}
{
   helgrind-glibc25-005
   Helgrind:Race
   obj:/lib*/libpthread-2.5.*so
   obj:/lib*/libpthread-2.5.*so
   obj:/lib*/libpthread-2.5.*so
}
{
   helgrind-glibc25-006
   Helgrind:Race
   obj:/lib*/libpthread-2.5.*so
   obj:/lib*/libpthread-2.5.*so
   obj:/lib*/libc-2.5.*so
}
{
   helgrind-glibc25-007
   Helgrind:Race
   obj:/lib*/ld-2.5.*so
   obj:/lib*/libc-2.5.*so
   obj:/lib*/libdl-2.5.*so
}
{
   helgrind-glibc25-008
   Helgrind:Race
   obj:/lib*/libpthread-2.5.*so
   obj:/lib*/libc-2.5.*so
}
{
   helgrind-glibc25-009
   Helgrind:Race
   obj:/lib*/libc-2.5.*so
   fun:*
   obj:/lib*/libc-2.5.*so
}
{
   helgrind-glibc25-010
   Helgrind:Race
   obj:/lib*/ld-2.5.*so
   obj:/lib*/libpthread-2.5.*so
}
{
   helgrind-glibc25-011
   Helgrind:Race
   obj:/lib*/libc-2.5.*so
   obj:/lib*/libpthread-2.5.*so
}
{
   helgrind-glibc25-013
   Helgrind:Race
   obj:/lib*/ld-2.5.*so
   fun:*
   obj:/lib*/ld-2.5.*so
}
{
   helgrind-glibc25-014
   Helgrind:Race
   obj:/lib*/ld-2.5.*so
   obj:/lib*/ld-2.5.*so
   obj:/lib*/libpthread-2.5.*so
}

# These are very ugly.  They are needed to suppress errors inside (eg)
# NPTL's pthread_cond_signal.  Why only one stack frame -- at least we
# should see the wrapper calling the real functions, right?
# Unfortunately, no: the real functions are handwritten assembly (in
# the glibc-2.5 sources) and does not create a proper stack frame.
# Therefore it's only one level of unwinding before we're back out in
# user code rather than the 2 levels you'd expect.
{
   helgrind-glibc25-101
   Helgrind:Race
   obj:/lib*/libpthread-2.5.*so
   fun:pthread_*
}
{
   helgrind-glibc25-102
   Helgrind:Race
   fun:mythread_wrapper
   obj:/lib*/libpthread-2.5.*so
}
{
   helgrind-glibc25-103
   Helgrind:Race
   fun:pthread_cond_*@@GLIBC_2.3.2
}
{
   helgrind-glibc25-104
   Helgrind:Race
   fun:__lll_mutex_*
}
{
   helgrind-glibc25-105
   Helgrind:Race
   fun:pthread_rwlock_*lock*
}
{
   helgrind-glibc25-107
   Helgrind:Race
   obj:/lib*/libpthread-2.5.*so
   fun:sem_*
}
{
   helgrind-glibc25-108
   Helgrind:Race
   fun:clone
}
{
   helgrind-glibc25-109
   Helgrind:Race
   fun:start_thread
}

######------------ glibc-2.7 specific ---------######
#
{
   helgrind-glibc27-001
   Helgrind:Race
   obj:/lib*/ld-2.7.*so
   obj:/lib*/ld-2.7.*so
}
{
   helgrind-glibc27-003
   Helgrind:Race
   obj:/lib*/ld-2.7.*so
   obj:/lib*/libc-2.7.*so
   obj:/lib*/libc-2.7.*so
}
{
   helgrind-glibc27-004
   Helgrind:Race
   obj:/lib*/libc-2.7.*so
   obj:/lib*/libc-2.7.*so
}
{
   helgrind-glibc27-005
   Helgrind:Race
   obj:/lib*/libpthread-2.7.*so
   obj:/lib*/libpthread-2.7.*so
   obj:/lib*/libpthread-2.7.*so
}
{
   helgrind-glibc27-011
   Helgrind:Race
   obj:/lib*/libc-2.7.*so
   obj:/lib*/libpthread-2.7.*so
}

{
   helgrind-glibc27-101
   Helgrind:Race
   obj:/lib*/libpthread-2.7.*so
   fun:pthread_*
}
{
   helgrind-glibc27-102
   Helgrind:Race
   fun:mythread_wrapper
   obj:/lib*/libpthread-2.7.*so
}
{
   helgrind-glibc27-107
   Helgrind:Race
   obj:/lib*/libpthread-2.7.*so
   fun:sem_*
}

######------------ glibc-2.6 specific ---------######
#
{
   helgrind-glibc26-001
   Helgrind:Race
   obj:/lib*/ld-2.6.*so
   obj:/lib*/ld-2.6.*so
}
{
   helgrind-glibc26-003
   Helgrind:Race
   obj:/lib*/ld-2.6.*so
   obj:/lib*/libc-2.6.*so
   obj:/lib*/libc-2.6.*so
}
{
   helgrind-glibc26-004
   Helgrind:Race
   obj:/lib*/libc-2.6.*so
   obj:/lib*/libc-2.6.*so
}
{
   helgrind-glibc26-005
   Helgrind:Race
   obj:/lib*/libpthread-2.6.*so
   obj:/lib*/libpthread-2.6.*so
   obj:/lib*/libpthread-2.6.*so
}
{
   helgrind-glibc26-006
   Helgrind:Race
   obj:/lib*/libpthread-2.6.*so
   obj:/lib*/libpthread-2.6.*so
   obj:/lib*/libc-2.6.*so
}
{
   helgrind-glibc26-008
   Helgrind:Race
   obj:/lib*/libpthread-2.6.*so
   obj:/lib*/libc-2.6.*so
}
{
   helgrind-glibc26-011
   Helgrind:Race
   obj:/lib*/libc-2.6.*so
   obj:/lib*/libpthread-2.6.*so
}
{
   helgrind-glibc26-014
   Helgrind:Race
   obj:/lib*/ld-2.6.*so
   obj:/lib*/ld-2.6.*so
   obj:/lib*/libpthread-2.6.*so
}

{
   helgrind-glibc26-101
   Helgrind:Race
   obj:/lib*/libpthread-2.6.*so
   fun:pthread_*
}
{
   helgrind-glibc26-102
   Helgrind:Race
   fun:mythread_wrapper
   obj:/lib*/libpthread-2.6.*so
}
{
   helgrind-glibc26-106
   Helgrind:Race
   fun:__lll_lock_wait
}
{
   helgrind-glibc26-107
   Helgrind:Race
   obj:/lib*/libpthread-2.6.*so
   fun:sem_*
}

######------------ glibc-2.4 specific ------------######
#
{
   helgrind-glibc24-001
   Helgrind:Race
   obj:/lib*/ld-2.4.*so
   obj:/lib*/ld-2.4.*so
}
{
   helgrind-glibc24-003
   Helgrind:Race
   obj:/lib*/ld-2.4.*so
   obj:/lib*/libc-2.4.*so
   obj:/lib*/libc-2.4.*so
}
{
   helgrind-glibc24-004
   Helgrind:Race
   obj:/lib*/libc-2.4.*so
   obj:/lib*/libc-2.4.*so
}
{
   helgrind-glibc24-005
   Helgrind:Race
   obj:/lib*/libpthread-2.4.*so
   obj:/lib*/libpthread-2.4.*so
   obj:/lib*/libpthread-2.4.*so
}
{
   helgrind-glibc24-006
   Helgrind:Race
   obj:/lib*/libpthread-2.4.*so
   obj:/lib*/libpthread-2.4.*so
   obj:/lib*/libc-2.4.*so
}
{
   helgrind-glibc24-008
   Helgrind:Race
   obj:/lib*/libpthread-2.4.*so
   obj:/lib*/libc-2.4.*so
}
{
   helgrind-glibc24-010
   Helgrind:Race
   obj:/lib*/ld-2.4.*so
   obj:/lib*/libpthread-2.4.*so
}
{
   helgrind-glibc24-011
   Helgrind:Race
   obj:/lib*/libc-2.4.*so
   obj:/lib*/libpthread-2.4.*so
}

{
   helgrind-glibc24-101
   Helgrind:Race
   obj:/lib*/libpthread-2.4.*so
   fun:pthread_*
}
{
   helgrind-glibc24-102
   Helgrind:Race
   fun:mythread_wrapper
   obj:/lib*/libpthread-2.4.*so
}

######--------- glibc-2.3 specific ---------######
{
   helgrind-glibc23-001
   Helgrind:Race
   obj:/lib*/ld-2.3.*so
   obj:/lib*/ld-2.3.*so
}
{
   helgrind-glibc23-002
   Helgrind:Race
   obj:/lib*/ld-2.3.*so
   obj:/lib*/libc-2.3.*so
   obj:/lib*/ld-2.3.*so
}
{
   helgrind-glibc23-003
   Helgrind:Race
   obj:/lib*/ld-2.3.*so
   obj:/lib*/libc-2.3.*so
   obj:/lib*/libc-2.3.*so
}
{
   helgrind-glibc23-004
   Helgrind:Race
   obj:/lib*/libc-2.3.*so
   obj:/lib*/libc-2.3.*so
}
{
   helgrind-glibc23-006
   Helgrind:Race
   obj:/lib*/libpthread-2.3.*so
   obj:/lib*/libpthread-2.3.*so
   obj:/lib*/libc-2.3.*so
}
{
   helgrind-glibc23-008
   Helgrind:Race
   obj:/lib*/libpthread-2.3.*so
   obj:/lib*/libc-2.3.*so
}
{
   helgrind-glibc23-009
   Helgrind:Race
   obj:/lib*/libc-2.3.*so
   obj:/lib*/ld-2.3.*so
   obj:/lib*/libc-2.3.*so
}
{
   helgrind-glibc23-011
   Helgrind:Race
   obj:/lib*/libc-2.3.*so
   obj:/lib*/libpthread-2.3.*so
}
{
   helgrind-glibc23-012
   Helgrind:Race
   obj:/lib*/ld-2.3.*so
   obj:/lib*/ld-2.3.*so
   obj:/lib*/libc-2.3.*so
}
{
   helgrind-glibc23-014
   Helgrind:Race
   obj:/lib*/ld-2.3.*so
   obj:/lib*/ld-2.3.*so
   obj:/lib*/libpthread-2.3.*so
}

{
   helgrind-glibc23-100
   Helgrind:Race
   obj:/lib*/libpthread-2.3.*so
   fun:pthread_*
}
{
   helgrind-glibc23-101
   Helgrind:Race
   fun:mythread_wrapper
   obj:/lib*/libpthread-2.3.*so
}

######------ qt4 specific (GNU mangling) ------######
{
   helgrind-qt4-QMutex::lock()-twice
   Helgrind:Race
   fun:_ZN6QMutex4lockEv
   fun:_ZN6QMutex4lockEv
}

##----------------------------------------------------------------------##

# Errors to suppress by default with glibc 2.3.x

# Format of this file is:
# {
#     name_of_suppression
#     tool_name:supp_kind
#     (optional extra info for some suppression types)
#     caller0 name, or /name/of/so/file.so
#     caller1 name, or ditto
#     (optionally: caller2 name)
#     (optionally: caller3 name)
#  }
#
# For Memcheck, the supp_kinds are:
#
#     Param Value1 Value2 Value4 Value8 Value16 Jump
#     Free Addr1 Addr2 Addr4 Addr8 Addr16
#     Cond (previously known as Value0)
#
# and the optional extra info is:
#     if Param: name of system call param

{
   __GI___stpcpy/*
   Memcheck:Cond
   fun:__GI___stpcpy
   fun:*
}
{
   strlen/__GI__dl_open/dlopen_doit
   Memcheck:Cond
   fun:strlen
   fun:__GI__dl_open
   fun:dlopen_doit
}
{
   strlen/_dl_signal_cerror/_dl_lookup_symbol_internal/do_dlsym
   Memcheck:Cond
   fun:_dl_signal_cerror
   fun:_dl_lookup_symbol_internal
   fun:do_dlsym
}
{
   strlen/*dl_map_object*(Cond)
   Memcheck:Cond
   fun:strlen
   fun:*dl_map_object*
}

{
   strlen/*dl_open_worker*(Cond)
   Memcheck:Cond
   fun:strlen
   fun:*dl_open_worker*
}
{
   strlen/_dl_sym/dlsym_doit
   Memcheck:Cond
   fun:strlen
   fun:_dl_sym
   fun:dlsym_doit
}
{
   realpath is inefficiently coded
   Memcheck:Overlap
   fun:memcpy
   fun:realpath*
}

{
   realpath stupidity part II
   Memcheck:Overlap
   fun:strcpy
   fun:realpath*
}
{
   strlen/decompose_rpath/_dl_map_object
   Memcheck:Cond
   fun:strlen
   fun:decompose_rpath
   fun:*dl_map_object*
}
{
   stpcpy/_dl_sym*
   Memcheck:Cond
   fun:__stpcpy
   fun:_dl_*
}

#-------- For R H 8.0
{
   elf_dynamic_do_rel.7/_dl_relocate_object_internal/dl_open_worker(Cond)
   Memcheck:Cond
   fun:elf_dynamic_do_rel.7
   fun:_dl_relocate_object_internal
   fun:dl_open_worker
}
{
   dl_relocate/dl_open_worker
   Memcheck:Cond
   fun:_dl_relocate_object_internal
   fun:dl_open_worker
}
{
   RedHat8-1
   Memcheck:Cond
   fun:elf_dynamic_do_rela.8
   fun:_dl_relocate_object
   fun:dl_main
   fun:_dl_sysdep_start
}
{
   RedHat8-2
   Memcheck:Cond
   fun:elf_dynamic_do_rel.7
   fun:_dl_relocate_object
   fun:dl_main
   fun:_dl_sysdep_start
}
{
   RedHat8-3
   Memcheck:Cond
   fun:elf_dynamic_do_rela.8
   fun:_dl_relocate_object
   fun:dl_open_worker
}

#-------- glibc 2.3.2/ Fedora Core 1
{
   dl_relocate/dl_main
   Memcheck:Cond
   fun:_dl_relocate_object_internal
   fun:dl_main
}

#-------- glibc 2.3.3/ Fedora Core 2
{
   dl_relocate_object/dl_main
   Memcheck:Cond
   fun:_dl_relocate_object
   fun:dl_main
}
{
   _dl_relocate_object/dl_open_worker
   Memcheck:Cond
   fun:_dl_relocate_object
   fun:dl_open_worker
}

#-------- glibc 2.3.4/ Fedora Core 3
{
   dl_relocate_object
   Memcheck:Cond
   fun:_dl_relocate_object
}

##----------------------------------------------------------------------##
## Bugs in helper library supplied with Intel Icc 7.0 (65)
## in /opt/intel/compiler70/ia32/lib/libcxa.so.3
{
   Intel compiler70/ia32/lib/libcxa.so.3 below-esp accesses
   Memcheck:Addr4
   obj:/opt/intel/compiler70/ia32/lib/libcxa.so.3
}

##----------------------------------------------------------------------##
## SuSE 9 after FV changes (post 2.1.0)

{
   strlen/_dl_init_paths/dl_main/_dl_sysdep_start(Cond)
   Memcheck:Cond
   fun:strlen
   fun:_dl_init_paths
   fun:dl_main
   fun:_dl_sysdep_start
}

{
   Ugly strchr error in /lib/ld-2.3.2.so
   Memcheck:Cond
   obj:/lib/ld-2.3.2.so
}

##----------------------------------------------------------------------##
## SuSE 9.1 with post 2.1.2
{
   Ugly strchr error in /lib/ld-2.3.3.so
   Memcheck:Cond
   obj:/lib/ld-2.3.3.so
}

##----------------------------------------------------------------------##
## SuSE 9.1 with 3.0 branch (x86)
{
   Strstr dubiousness in pthread_initialize
   Memcheck:Cond
   fun:strstr
   fun:pthread_initialize
   obj:/lib/libpthread.so.0
   obj:/lib/libpthread.so.0
}

##----------------------------------------------------------------------##
## glibc-2.3.3 on FC2
## Assumes that sysctl returns \0-terminated strings in is_smp_system
#{
#   Unterminated strstr string in is_smp_system() (NPTL)
#   Memcheck:Cond
#   fun:strstr
#   fun:__pthread_initialize_minimal
#   obj:/lib/tls/libpthread*.so*
#   obj:/lib/tls/libpthread*.so*
#}
#{
#   Unterminated strstr string in is_smp_system() (LinuxThreads)
#   Memcheck:Cond
#   fun:strstr
#   fun:pthread_initialize
#   obj:/lib/i686/libpthread*.so*
#   obj:/lib/i686/libpthread*.so*
#}
#{
#   Unterminated strstr string in is_smp_system() (LinuxThreads)
#   Memcheck:Cond
#   fun:strstr
#   fun:pthread_initialize
#   obj:/lib/libpthread-0.10.so
#   obj:/lib/libpthread-0.10.so
#}

## Bug in PRE(sys_clone), really.  Some args are not used.
{
   LinuxThread clone use (parent_tidptr)
   Memcheck:Param
   clone(parent_tidptr)
   fun:clone
   fun:pthread_create
}
{
   LinuxThread clone use (child_tidptr)
   Memcheck:Param
   clone(child_tidptr)
   fun:clone
   fun:pthread_create
}
{
   LinuxThread clone use (tlsinfo)
   Memcheck:Param
   clone(tlsinfo)
   fun:clone
   fun:pthread_create
}
{
   LinuxThread clone use (parent_tidptr)
   Memcheck:Param
   clone(parent_tidptr)
   fun:clone
   fun:pthread_create@@GLIBC_2.1
}
{
   LinuxThread clone use (child_tidptr)
   Memcheck:Param
   clone(child_tidptr)
   fun:clone
   fun:pthread_create@@GLIBC_2.1
}
{
   LinuxThread clone use (tlsinfo)
   Memcheck:Param
   clone(tlsinfo)
   fun:clone
   fun:pthread_create@@GLIBC_2.1
}

## LinuxThreads manager writes messages containing undefined bytes
{
   LinuxThreads: write/pthread_onexit_process
   Memcheck:Param
   write(buf)
   fun:pthread_onexit_process
   fun:exit
}
{
   LinuxThreads: write/pthread_join
   Memcheck:Param
   write(buf)
   fun:pthread_join
}
{
   LinuxThreads: write/pthread_create
   Memcheck:Param
   write(buf)
   fun:pthread_create@@GLIBC_2.1
}
{
   LinuxThreads: write/pthread_create 2
   Memcheck:Param
   write(buf)
   fun:write
   fun:pthread_create@@GLIBC_2.1
   fun:main
}
{
   LinuxThreads: write/__pthread_initialize_manager/pthread_create
   Memcheck:Param
   write(buf)
   fun:__pthread_initialize_manager
   fun:pthread_create@@GLIBC_2.1
}

{
   LinuxThreads: write/pthread_create
   Memcheck:Param
   write(buf)
   fun:write
   fun:pthread_create
}

## LinuxThreads leaks the stack and TLS data for the manager thread
{
   LinuxThreads: leaks stack of manager thread
   Memcheck:Leak
   fun:malloc
   fun:__pthread_initialize_manager
   fun:pthread_create@@GLIBC_2.1
}
{
   LinuxThreads: leaks TLS data for manager thread
   Memcheck:Leak
   fun:calloc
   fun:_dl_allocate_tls
   fun:__pthread_initialize_minimal
}
{
   LinuxThreads: leaks TLS data for manager thread
   Memcheck:Leak
   fun:memalign
   fun:_dl_allocate_tls
   fun:__pthread_initialize_minimal
}

##----------------------------------------------------------------------##
## glibc-2.3.4 on FC3
## Assumes that sysctl returns \0-terminated strings in is_smp_system
#{
#   Unterminated strstr string in is_smp_system() (NPTL)
#   Memcheck:Cond
#   fun:strstr
#   fun:__pthread_initialize_minimal
#   obj:/lib/tls/libpthread-2.3.4.so
#   obj:/lib/tls/libpthread-2.3.4.so
#}
#{
#   Unterminated strstr string in is_smp_system() (NPTL)
#   Memcheck:Cond
#   fun:strstr
#   fun:__pthread_initialize_minimal
#   obj:/lib64/tls/libpthread*.so*
#}

##----------------------------------------------------------------------##
## glibc-2.3.5 on FC4
## Assumes that sysctl returns \0-terminated strings in is_smp_system
#{
#   Unterminated strstr string in is_smp_system() (NPTL)
#   Memcheck:Cond
#   fun:strstr
#   fun:__pthread_initialize_minimal
#   obj:*/libpthread-2.3.5.so
#   obj:*/libpthread-2.3.5.so
#}


##----------------------------------------------------------------------##
# 
# I don't know why this is needed, but still:
{
   glibc-2.3.x-on-SuSE-10.0-(PPC)-1
   Memcheck:Cond
   fun:_dl_start
   fun:_start
}
{
   glibc-2.3.x-on-SuSE-10.1-(PPC)-1
   Memcheck:Cond
   fun:_dl_start_final
   fun:_dl_start
   fun:_start
}
{
   glibc-2.3.x-on-SuSE-10.0/10.1-(PPC)-2a
   Memcheck:Cond
   fun:index
   obj:*ld-2.3.*.so
}
{
   glibc-2.3.x-on-SuSE-10.0/10.1-(PPC)-2b
   Memcheck:Addr4
   fun:index
   fun:expand_dynamic_string_token
}
{
   glibc-2.3.5-on-SuSE-10.0/10.1-(PPC)-2c
   Memcheck:Addr4
   fun:index
   obj:*ld-2.3.*.so
}
{
   glibc-2.3.5-on-SuSE-10.0/10.1-(PPC)-3
   Memcheck:Addr4
   fun:*wordcopy_fwd_dest_aligned*
   fun:mem*cpy
   obj:*lib*2.3.*.so
}
{
   glibc-2.3.5-on-SuSE-10.0/10.1-(PPC)-4
   Memcheck:Addr4
   fun:bcmp
   fun:*rpath*
   fun:*rpath*
   fun:*rpath*
}

##----------------------------------------------------------------------##
# Hacks pertaining to the fact that our intercept mechanism can't
# always get hold of strlen early enough, due to idiocy in the low
# level memory manager.

## HACK to do with strlen not being intercepted early enough
{
   strlen-not-intercepted-early-enough-HACK-1
   Memcheck:Addr4
   fun:strlen
   fun:_dl_map_object_from_fd
   fun:_dl_map_object
}

{
   strlen-not-intercepted-early-enough-HACK-2
   Memcheck:Addr4
   fun:strlen
   fun:decompose_rpath
   fun:cache_rpath
   fun:_dl_map_object
}

{
   strlen-not-intercepted-early-enough-HACK-3
   Memcheck:Cond
   fun:strlen
   fun:_dl_new_object
   fun:_dl_map_object_from_fd
   fun:_dl_map_object
}

{
   strlen-not-intercepted-early-enough-HACK-4
   Memcheck:Cond
   fun:strlen
   fun:expand_dynamic_string_token
   fun:_dl_map_object
}

{
   strlen-not-intercepted-early-enough-HACK-5
   Memcheck:Cond
   fun:strlen
   fun:fillin_rpath
   fun:_dl_init_paths
}


## HACK to do with index not being intercepted early enough
{
   index-not-intercepted-early-enough-HACK-1
   Memcheck:Cond
   fun:index
   obj:*
   fun:_dl_map_object
}
{
   index-not-intercepted-early-enough-HACK-2
   Memcheck:Cond
   fun:index
   fun:_dl_map_object
   obj:*
   fun:_dl_catch_error
}
{
   index-not-intercepted-early-enough-HACK-3
   Memcheck:Cond
   fun:index
   fun:_dl_map_object
   obj:*
   fun:_dl_sysdep_start
}

{
   index-not-intercepted-early-enough-HACK-4
   Memcheck:Cond
   fun:index
   fun:expand_dynamic_string_token
}


##----------------------------------------------------------------------##
## MontaVista 3.1 on ppc32 integer only
{
   MontaVista-3.1-ppc32-#1
   Memcheck:Value4
   obj:/lib/ld-2.3.2.so
   obj:/lib/ld-2.3.2.so
   fun:*dl_map_object*
   obj:/lib/libc-2.3.2.so
}

{
   MontaVista-3.1-ppc32-#2
   Memcheck:Value4
   fun:malloc
   obj:/lib/ld-2.3.2.so
   obj:/lib/ld-2.3.2.so
   obj:/lib/libc-2.3.2.so
}

{
   MontaVista-3.1-ppc32-#3
   Memcheck:Value4
   obj:/lib/ld-2.3.2.so
   obj:/lib/ld-2.3.2.so
}

##----------------------------------------------------------------------##
## Ubuntu something (based on Debian 3.0?) on x86

{
   Ubuntu-stripped-ld.so
   Memcheck:Cond
   obj:/lib/ld-2.3.*.so
   obj:/lib/ld-2.3.*.so
   obj:/lib/ld-2.3.*.so
   obj:/lib/ld-2.3.*.so
   obj:/lib/ld-2.3.*.so
}

##----------------------------------------------------------------------##
# MontaVista Linux 4.0.1 on ppc32
{
    MVL-401-linuxthreads-pthread_create
    Memcheck:Param
    write(buf)
    fun:pthread_create
}
{
   MVL-401-linuxthreads-pthread_create
   Memcheck:Param
   write(buf)
   obj:/lib/libpthread-0.10.so
   fun:pthread_create
}
